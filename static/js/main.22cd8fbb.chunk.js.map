{"version":3,"sources":["components/PreferenceBtn.js","components/Preferences.js","components/ProgressMeter.js","components/Controls.js","apiUrl.js","network/fetchWithTimeout.js","network/makeRequest.js","network/getParts.js","network/getPartBuffer.js","components/SongPlayer.js","components/SongBtn.js","helpers/stripTrailingSlash.js","components/Home.js","components/RecordingInput.js","components/PartFormlet.js","models/Part.js","network/destroySong.js","network/destroyPart.js","network/SongSender.js","helpers/ImmutableList.js","components/SongForm.js","components/PartLoadingEntry.js","components/SubmitProgress.js","components/SongFactory.js","components/SongInfo.js","components/CurrentCollection.js","network/getAdminSongs.js","helpers/useShallowMutation.js","helpers/StatusInfo.js","components/Admin.js","components/AdminFilter.js","network/attemptLogin.js","components/Login.js","network/getChoir.js","components/ChoirPage.js","App.js","index.js"],"names":["PreferenceBtn","props","className","selected","role","classList","onClick","handler","partName","setSelectedPreference","content","Preferences","useState","selectedPreference","isSelected","style","gridTemplateColumns","parts","length","map","part","name","initial","emphasizePart","isolatePart","gridColumn","fullChoir","ProgressMeter","progressWidth","setProgressWidth","meterWidth","setMeterWidth","meterRef","useRef","useEffect","computedWidth","window","getComputedStyle","current","getPropertyValue","parseInt","slice","newProgress","timestamp","duration","ref","e","rect","target","getBoundingClientRect","newTimestamp","clientX","x","seekTrack","width","Controls","handleKeyUp","keyCode","pauseTrack","resetTrack","playing","onKeyUp","playTrack","apiUrl","resource","options","timeout","controller","AbortController","id","setTimeout","abort","fetch","signal","response","clearTimeout","fetchWithTimeout","parser","isNetworkError","body","ok","console","log","status","err","Error","message","isUnauthorized","bodyContent","makeRequest","songId","apiEndpoint","getParts","partUrl","splitArray","split","splice","newUrl","join","request","Request","getPartBuffer","SongPlayer","setDuration","setTimestamp","setPlaying","loading","setLoading","setParts","seekingWhilePlaying","setSeekingWhilePlaying","audioRef","data","gainNodes","sourceNodes","loaded","ctxRef","ctx","audioContext","time","updaterRef","getData","recording_url","buffer","decodeAudioData","decodedData","allLoaded","Object","values","forEach","then","source","createBufferSource","connect","destination","start","onended","playData","stop","emphasizedPart","gain","value","isolatedPart","loadParts","partsData","node","createGain","previousTime","currentTime","setInterval","timeElapsedSinceLastUpdate","t","clearInterval","title","charAt","preferences","SongBtn","setSelectedSong","stripTrailingSlash","url","Home","selectedSong","AudioContext","to","match","songs","song","songContent","songPlayers","RecordingInput","mode","acceptNewRecording","setAcceptNewRecording","overrideRecording","revertToOldRecording","type","accept","onChange","handleFileUpload","required","PartFormlet","removePart","index","handleFormChange","updatePart","files","draggableId","key","disabled","noDrag","provided","draggableProps","dragHandleProps","innerRef","placeholder","Part","params","editableProps","recording","uniqid","reduce","propName","formData","FormData","append","authToken","method","headers","Authorization","destroySong","partId","destroyPart","SongSender","token","songController","packageRecord","abortController","sent","songUrl","recordOptions","record","undefined","songResponse","every","unsentParts","filter","nextPart","addSong","addPart","partPackage","push","sendSong","sendNextPart","hasNextPart","ImmutableList","items","initializer","freeze","get","add","newItem","remove","newItems","this","change","targetIndex","prop","newValue","item","itemIndex","updatedItem","findIndex","move","fromIndex","toIndex","movingItem","SongForm","partsArray","editableParts","statusInfo","factoryMode","editableSong","setTitle","partIndex","assembleLoadingsObject","loadingParts","setLoadings","loadings","success","indicateSuccess","deleteObsoleteParts","obsoleteParts","oldParts","updatingPartIds","includes","getObsoleteParts","destroyExistingPart","destroyExistingSong","setStatusInfo","setDestroy","setSuccess","setFailure","createOrUpdateSong","sender","songData","prepareSongData","abortControllers","setAbortControllers","createOrUpdateParts","partRequests","requestArray","partData","pitch_order","indexOf","preparePartData","submitSong","partRequest","handleDestroySong","confirm","onSubmit","preventDefault","setDelivery","onDragEnd","droppableId","droppableProps","reset","deleteBtn","PartLoadedEntry","loadedEntryVerbs","working","finished","SubmitProgress","jobStatus","topMessage","entries","partLoadingEntry","responseMessage","SongFactory","handleNewSong","isInProgress","button","SongInfo","handleEdit","editSong","CurrentCollection","choirId","choirEdit","getAdminSongs","useShallowMutation","initialObj","setValue","callback","obj","copiedObj","StatusInfo","isValidJobStatus","checkJobStatusValidity","isValidFactoryMode","checkFactoryModeValidity","Admin","setSongs","setEditableSong","setEditableParts","loadSongs","adminId","AdminFilter","username","password","attemptLogin","Login","isAuthed","setIsAuthed","incorrectCredentials","setIncorrectCredentials","setFormData","handleChange","decodedResponse","tokenString","localStorage","setItem","setLocalToken","setToken","catch","htmlFor","getChoir","ChoirPage","getItem","findLocalToken","useParams","loadChoir","choirData","exact","path","render","App","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.22cd8fbb.chunk.js","sourcesContent":["import \"../style/PreferenceBtn.css\";\n\nfunction PreferenceBtn(props) {\n\n  const classList = function() {\n    const selected = (props.selected ? \" selected\" : \"\")\n    if (props.role === \"full-choir\") {\n      return \"PreferenceBtn full-choir\" + selected\n    } else {\n      return \"PreferenceBtn\" + selected\n    }\n  }\n\n  const handleClick = function() {\n    //Call either emphasizePart or isolatePart\n    props.handler(props.partName)\n    //Apply the \"selected\" className by setting selectedPreference in state\n    props.setSelectedPreference({\n      role: props.role,\n      partName: props.partName\n    });\n  }\n\n  return (\n    <button className={classList()} onClick={handleClick}>\n      {props.content}\n    </button>\n  )\n}\n\nexport default PreferenceBtn;","import { useState } from \"react\";\nimport PreferenceBtn from \"./PreferenceBtn.js\";\nimport \"../style/Preferences.css\";\n\nfunction Preferences(props) {\n  const [selectedPreference, setSelectedPreference] = useState({\n    role: \"full-choir\",\n    partName: null\n  });\n  \n  const isSelected = function(role, partName) {\n    return (selectedPreference.role === \"full-choir\" && role === \"full-choir\") ||\n          (selectedPreference.role === role && selectedPreference.partName === partName);\n  }\n  \n  return (\n    <div \n      className=\"Preferences\" \n      style={{gridTemplateColumns: `repeat (${props.parts.length}, auto)`}}\n    >  \n      \n        <span>Emphasize</span>\n        {props.parts.map(part => {\n          return (\n            <PreferenceBtn \n              key={`emphasize-${part.name}`}\n              partName={part.name}\n              content={part.initial}\n              role=\"emphasize\" \n              handler={props.emphasizePart}\n              selected={isSelected(\"emphasize\", part.name)}\n              setSelectedPreference={setSelectedPreference}\n            />\n          )\n        })}\n   \n        <span>Isolate</span>\n        {props.parts.map(part => {\n          return (\n            <PreferenceBtn \n              key={`isolate-${part.name}`}\n              partName={part.name}\n              content={part.initial}\n              role=\"isolate\" \n              handler={props.isolatePart}\n              selected={isSelected(\"isolate\", part.name)}\n              setSelectedPreference={setSelectedPreference}\n            />\n          )\n        })}\n\n        <div \n          className=\"full-choir-container\"\n          style={{gridColumn: `2 / ${props.parts.length + 2}`}}\n        >\n          <PreferenceBtn \n            onClick={props.fullChoir}\n            selected={isSelected(\"full-choir\")}\n            role={\"full-choir\"}\n            content=\"Full Choir\"\n            handler={props.fullChoir}\n            setSelectedPreference={setSelectedPreference}\n          />\n        </div>\n    </div>\n  )\n}\n\nexport default Preferences;","import {useRef, useState, useEffect} from \"react\";\nimport \"../style/ProgressMeter.css\"\n\nfunction ProgressMeter(props) {\n  \n  \n  const [progressWidth, setProgressWidth] = useState(0);\n  const [meterWidth, setMeterWidth] = useState(0);\n  let meterRef = useRef();\n\n  const updateProgress = function() {\n    // Set new width of progress bar based on fraction of track completed\n    const newProgress = (props.timestamp / props.duration) * meterWidth;\n    setProgressWidth(newProgress);\n  }\n\n  const handleSeek = function(e) {\n    const rect = e.target.getBoundingClientRect();\n    const clickPosition = e.clientX - rect.x;\n    //Seek track to new timestamp based on click position within the meter\n    const newTimestamp = (clickPosition / meterWidth) * props.duration;\n    props.seekTrack(newTimestamp);\n  }\n\n    useEffect(() => {\n      //Get the actual width of the progressMeter\n      const computedWidth = (\n        window.getComputedStyle(meterRef.current).getPropertyValue(\"width\")\n      )\n      //Get rid of \"px\" and convert to Integer\n      setMeterWidth(parseInt(computedWidth.slice(0, 3)));\n    // eslint-disable-next-line\n    }, [])\n\n    //Update position of progress bar every time the timestamp updates\n    // eslint-disable-next-line\n    useEffect(updateProgress, [props.timestamp])\n\n  \n  return (\n    <div className=\"ProgressMeter\" ref={meterRef} onClick={handleSeek}>\n      <div className=\"progress-bar\" style={{width: progressWidth}}></div>\n    </div>\n  )\n}\n\nexport default ProgressMeter;","import ProgressMeter from \"./ProgressMeter.js\";\nimport PlayIcon from \"@material-ui/icons/PlayArrowRounded\";\nimport PauseIcon from \"@material-ui/icons/PauseRounded\";\nimport ResetIcon from \"@material-ui/icons/ReplayRounded\";\nimport \"../style/Controls.css\";\n\nfunction Controls(props) {\n  const handleKeyUp = function(e) {\n    if (e.keyCode === 32) {\n      props.pauseTrack();\n    }\n  }\n\n  const playOrPauseBtn = function() {\n    if (props.playing) {\n      return (\n      <button \n        className=\"control-btn\" \n        onClick={props.pauseTrack}\n        onKeyUp={handleKeyUp}\n      >\n        <PauseIcon />\n      </button>\n      )\n    } else {\n      return (\n      <button \n        className=\"control-btn\" \n        onClick={props.playTrack}\n      >\n        <PlayIcon />\n      </button>\n      )\n    }\n  }\n\n  return (\n    <div className=\"Controls\">\n      <button className=\"control-btn\" onClick={props.resetTrack}>\n        <ResetIcon />\n      </button>\n      {playOrPauseBtn()}\n      <div className=\"progress-meter-container\">\n        <ProgressMeter \n          seekTrack={props.seekTrack} \n          duration={props.duration}\n          timestamp={props.timestamp}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Controls;","export const apiUrl = \"https://choral-tracks-rails.up.railway.app/api\"\n","//This is lifted from a Dmitri Pavlutin article\n\nasync function fetchWithTimeout(resource, options = {}) {\n  const { timeout } = options;\n  const controller = new AbortController();\n  const id = setTimeout(() => controller.abort(), timeout);\n  const response = await fetch(resource, {\n    signal: controller.signal,\n    ...options\n  });\n  clearTimeout(id);\n  return response;\n}\n\nexport default fetchWithTimeout;","import fetchWithTimeout from \"./fetchWithTimeout\";\n\n\nasync function makeRequest(resource, parser, options = {}) {\n\n  let response;\n  const timeout = (options ? options.timeout : null);\n\n  try {\n    //fetch the resource \n    if (timeout > 0) {\n      response = await fetchWithTimeout(resource, options);\n    } else {\n      response = await fetch(resource, options);\n    }\n  } catch(err) {\n    //attach isNetworkError flag for fetch error\n    err.isNetworkError = true;\n    throw err;\n  }\n \n  const body = await response[parser]();\n\n  if (response.ok) {\n    console.log(body);\n    return body;\n    //For 401 unauthorized response, throw error with isUnauthorized flag\n  } else if(response.status === 401) {\n    const err = new Error(response.message);\n    err.isUnauthorized = true\n    throw err\n    //For all other non-2xx responses, throw error and log response to console for debugging\n  } else {\n    response.bodyContent = body;\n    console.log(response);\n    throw new Error(\"Software Bug\");\n  }\n\n}\n\nexport default makeRequest","import { apiUrl } from \"../apiUrl\";\nimport makeRequest from \"./makeRequest\";\n\nasync function getParts(songId) {\n  const apiEndpoint = `${apiUrl}/songs/${songId}/parts`;\n  // Timeout after 8 seconds\n  return await makeRequest(apiEndpoint, \"json\", { timeout: 2000})\n}\n\nexport default getParts;","import makeRequest from \"./makeRequest\";\n\nasync function getPartBuffer(partUrl) {\n  // Convert extension to .mp3 before fetching from Cloudinary\n  const splitArray = partUrl.split(\".\");\n  splitArray.splice((splitArray.length - 1), 1, 'mp3')\n  const newUrl = splitArray.join(\".\");\n  \n  const request = new Request(newUrl);\n  // Timeout after 8 seconds\n  return await makeRequest(request, \"arrayBuffer\", { timeout: 8000});\n}\n\nexport default getPartBuffer;","import { useState, useEffect, useRef } from \"react\";\nimport LoadingMask from \"react-loadingmask\";\nimport \"react-loadingmask/dist/react-loadingmask.css\";\nimport Preferences from \"./Preferences.js\"\nimport Controls from \"./Controls.js\";\nimport \"../style/Song.css\";\nimport getParts from \"../network/getParts\";\nimport getPartBuffer from \"../network/getPartBuffer.js\";\n\nfunction SongPlayer(props) {\n  //Set duration to an arbitrarily long amount of time until song loads\n  const [duration, setDuration] = useState(10000);\n  const [timestamp, setTimestamp] = useState(0);\n  const [playing, setPlaying] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [parts, setParts] = useState([])\n  const [seekingWhilePlaying, setSeekingWhilePlaying] = useState(false);\n  let audioRef = useRef({\n    data: {},\n    gainNodes: {},\n    sourceNodes: {},\n    loaded: {}\n  });\n  const ctxRef = useRef({\n    ctx: props.audioContext,\n    time: 0\n  })\n\n  const updaterRef = useRef();\n\n  const getData = async function(part) {\n  const buffer = await getPartBuffer(part.recording_url);\n    return ctxRef.current.ctx.decodeAudioData(buffer, decodedData => {\n      audioRef.current.loaded[part.name] = true;\n      console.log(part.name, \"loaded\");\n      if (allLoaded()) { setLoading(false); }\n      return decodedData;\n    });\n  }\n\n  const allLoaded = function() {\n    //Check if all the parts have been recorded as loaded\n    return (Object.values(audioRef.current.loaded).length === parts.length)\n  }\n\n  const playData = function(part) {\n    audioRef.current.data[part.name].then(decodedData => {\n      \n      // Create source node\n      const source = ctxRef.current.ctx.createBufferSource();\n      // Store the source in the sourcesRef\n      audioRef.current.sourceNodes[part.name] = source;\n      // Wire up the data\n      source.buffer = decodedData;\n      // Connect the source node to the gain node (which controls the volume)\n      source.connect(audioRef.current.gainNodes[part.name]);\n      // Connect the gain node to the destination (e.g., speakers) and start the audio\n      audioRef.current.gainNodes[part.name].connect(ctxRef.current.ctx.destination);\n      source.start(0, timestamp);\n      console.log(\"Playing AudioBuffer\", decodedData, ctxRef.current.ctx);\n      source.onended = () => {\n        console.log(\"Ended\");\n      }\n    })\n  }\n\n  const playTrack = function() {\n    if (playing) {\n      return\n    }\n    parts.forEach(part => {\n      playData(part);\n    });\n    //Indicate that play has begun\n    setPlaying(true);\n  }\n\n  const pauseTrack = function() {\n    if (playing) {\n      parts.forEach(part => {\n        console.log(\"Stopping\");\n        audioRef.current.sourceNodes[part.name].stop();\n        console.log(\"Stopped playing \", audioRef.current.sourceNodes[part.name]);\n      });\n      //Indicate that playing has stopped\n      setPlaying(false);\n    }\n  }\n\n  const resetTrack = function() {\n    pauseTrack();\n    setTimestamp(0); \n  }\n\n  const seekTrack = function(newTimestamp) {\n    if (playing) {\n      setSeekingWhilePlaying(true);\n    }\n    pauseTrack();\n    setTimestamp(newTimestamp);\n    //Allow useEffect to restart\n  }\n\n  //Execute when seekingWhilePlaying state changes\n  useEffect(() => {\n    if (seekingWhilePlaying) {\n      //Restart the track after seek\n      playTrack();\n      setSeekingWhilePlaying(false);\n    }\n    //eslint-disable-next-line\n   }, [seekingWhilePlaying]);\n\n   const emphasizePart = function(emphasizedPart) {\n    parts.forEach(part => {\n      if (part.name === emphasizedPart) {\n        //Set part to be emphasized at full volume\n        audioRef.current.gainNodes[part.name].gain.value = 1\n      } else {\n        //Set the rest of the parts at a low volume\n        audioRef.current.gainNodes[part.name].gain.value = .15;\n      }\n    })\n  }\n\n  const isolatePart = function(isolatedPart) {\n    parts.forEach(part => {\n      if (part.name === isolatedPart) {\n        //Set part to be isolated at full volume\n        audioRef.current.gainNodes[part.name].gain.value = 1\n      } else {\n        //Mute the rest of the parts\n        audioRef.current.gainNodes[part.name].gain.value = 0;\n      }\n    })\n  }\n\n  const fullChoir = function() {\n    parts.forEach(part => {\n      audioRef.current.gainNodes[part.name].gain.value = 1;\n    })\n  }\n\n  const createUpdaterInterval = function() {\n    return setInterval(() => {\n      const timeElapsedSinceLastUpdate = (\n        ctxRef.current.ctx.currentTime - ctxRef.current.previousTime\n      );\n      //Bring the time property up to date with the currentTime\n      ctxRef.current.previousTime = ctxRef.current.ctx.currentTime;\n      setTimestamp(t => t + timeElapsedSinceLastUpdate);\n    }, 250);\n  }\n\n  const getCapitalizedPartsString = function() {\n    const capitalizedArray = parts.map(part => {\n      const partName = part.name;\n      return partName.charAt(0) + partName.slice(1);\n    })\n    return capitalizedArray.join(\", \")\n  }\n\n  const loadParts = async function() {\n    const partsData = await getParts(props.id);\n    setParts(partsData);\n  }\n\n  //Load parts on ComponentDidMount\n  useEffect(() => {\n    const sourceNodes = audioRef.current.sourceNodes;\n    loadParts();\n\n    //Pause track on ComponentWillUnmount\n    return () => {\n      Object.values(sourceNodes).forEach(node => node.stop())\n    };\n  // eslint-disable-next-line\n  }, [])\n\n  //Execute once the parts data have loaded\n  useEffect(() => {\n    if (parts.length > 0) {\n      parts.forEach(part => {\n        //Load audio for each part\n        audioRef.current.data[part.name] = getData(part)\n        //Create a gain (volume) node for each part\n        audioRef.current.gainNodes[part.name] = ctxRef.current.ctx.createGain();\n      });\n      //Once loaded, select the first part arbitrarily and set the duration\n      Object.values(audioRef.current.data)[0].then(buffer => setDuration(buffer.duration));\n    }\n  // eslint-disable-next-line\n  }, [parts])\n\n  //Execute when playing state changes\n  useEffect(() => {\n    if (playing) {\n      //Before the updater Interval starts, bring the time up to date with the\n      //Audio Context's currentTime\n      ctxRef.current.previousTime = ctxRef.current.ctx.currentTime;\n      updaterRef.current = createUpdaterInterval();\n    } else {\n      clearInterval(updaterRef.current);\n    }\n    return () => clearInterval(updaterRef.current);\n    // eslint-disable-next-line\n  }, [playing])\n\n  //Execute when the timestamp updates\n  useEffect(() => {\n    //If the timestamp exceeds duration of the track,\n    //stop the track and reset the timestamp to 0\n    if (timestamp > duration) {\n      resetTrack();\n    }\n    // eslint-disable-next-line\n  }, [timestamp])\n\n  const loadingMessage = function() {\n    if (loading) {\n      return \"Loading song (this might take a bit)\"\n    } else {\n      return \"\"\n    }\n  }\n\n  const preferences = function() {\n    if (parts.length > 1) {\n      return (\n        <Preferences \n            parts={parts}\n            emphasizePart={emphasizePart}\n            isolatePart={isolatePart}\n            fullChoir={fullChoir} \n          />\n      )\n    }\n  }\n\n  return (\n      <div className=\"Song\">\n        <h2 className=\"song-title\">{props.title}</h2>\n        <span className=\"loading-message\">{loadingMessage()}</span>\n        <LoadingMask loading={loading}>\n          <Controls\n            playTrack={playTrack}\n            resetTrack={resetTrack}\n            pauseTrack={pauseTrack}\n            seekTrack={seekTrack}\n            timestamp={timestamp}\n            duration={duration}\n            playing={playing}\n          />\n          <span className=\"parts\">\n            {`Parts: ${getCapitalizedPartsString()}`}\n          </span>\n          {/* Display preferences only if there is more than one part */}\n          {preferences()}\n        </LoadingMask>\n        \n      </div>\n  )\n}\n\nexport default SongPlayer;","import \"../style/SongBtn.css\";\n\nfunction SongBtn(props) {\n\n  return (\n    <button className=\"SongBtn\" onClick={() => props.setSelectedSong(props.id)}>\n      {props.title}\n    </button>\n  )\n}\n\nexport default SongBtn;\n","function stripTrailingSlash(url) {\n  if (url.charAt(url.length - 1) !== \"/\") {\n    return url;\n  } else {\n    return stripTrailingSlash(url.slice(0,-1));\n  }\n}\n\nexport default stripTrailingSlash;","import { useState } from \"react\"\nimport { Link } from \"react-router-dom\";\nimport SongPlayer from \"./SongPlayer.js\";\nimport SongBtn from \"./SongBtn.js\";\nimport { AudioContext } from 'standardized-audio-context';\nimport stripTrailingSlash from \"../helpers/stripTrailingSlash.js\";\n\n\nfunction Home(props) {\n  //Store id of selected song\n  const [selectedSong, setSelectedSong] = useState(null);\n\n  const [audioContext] = useState(new AudioContext());\n\n  const songContent = function(song) {\n    if (song.id === selectedSong) {\n      return (\n        <SongPlayer \n        title={song.title}\n        id={song.id}\n        key={song.id}\n        audioContext={audioContext}\n      />\n      )\n    } else {\n      return (\n        <SongBtn \n          title={song.title}\n          id={song.id}\n          setSelectedSong={setSelectedSong}\n          key={song.title + song.id}\n        />\n      )\n    }\n  }\n\n  \n  const songPlayers = function() {\n    if (props.songs) {\n      return props.songs.map(song => {\n        return songContent(song);\n      })\n    }\n  }\n  \n  return (\n    <div className=\"Home\">\n      <Link to={`${stripTrailingSlash(props.match.url)}/admin`}>\n        <button className=\"nav-btn\">Admin</button>\n      </Link>\n      <h1>Holy Transfiguration Choir</h1>\n      <section id=\"overview\">\n        <p >\n          Welcome to the HT choral resources!\n          Hopefully, there will be a lot more to come, but for right now,\n          check out the song player below. If you click on one of the titles,\n          you can play the song with options to hear your part by itself (\"isolate\"),\n          or with the other parts softer (\"emphasize\").\n        </p>\n        <p id=\"disclaimer\">\n          NB: &ensp; This player may not work on a mobile device. &nbsp;\n          Also, you may find that you get the best experience using headphones,\n          especially when selecting \"emphasize\".\n        </p>\n      </section>\n\n      {songPlayers()}\n    </div>\n  );\n}\n\nexport default Home;\n\n\n","import { useState } from \"react\";\nimport \"../style/RecordingInput.css\"\n\nfunction RecordingInput(props) {\n  const [acceptNewRecording, setAcceptNewRecording] = useState(props.mode === \"new\");\n\n  const overrideRecording = function() {\n    setAcceptNewRecording(true)\n  }\n\n  const revertToOldRecording = function() {\n    setAcceptNewRecording(false)\n  }\n\n  const content = function() {\n    if (props.mode === \"new\") {\n      //If we are creating a new song, display button to upload new recording\n      return (\n        <input \n          type=\"file\" \n          accept=\"audio/*\"\n          name=\"recording\" \n          onChange={props.handleFileUpload}\n          required\n        />\n      )\n      //If we are overriding the old recording, display button to upload new recording,\n      //but also button to revert to back to the old one\n    } else if (acceptNewRecording && props.mode === \"edit\") {\n      return (\n        <div className=\"override-recording\">\n          <input \n            type=\"file\" \n            accept=\"audio/*\"\n            name=\"recording\" \n            onChange={props.handleFileUpload}\n            required\n          />\n          <button className=\"revert-btn\" onClick={revertToOldRecording}>\n            Revert to Existing Recording\n          </button>\n        </div>\n       \n      )\n      //If we are editing the song, display button to override recording\n    } else {\n      return (\n        <button type=\"button\" onClick={overrideRecording}>\n          Override Recording\n        </button>\n      )\n    }\n  }\n  return (\n    <div className=\"RecordingInput\">\n      {content()}\n    </div>\n  )\n}\n\nexport default RecordingInput;\n","import RecordingInput from \"./RecordingInput.js\"\nimport CancelIcon from \"@material-ui/icons/Close\";\nimport \"../style/PartFormlet.css\"\nimport { Draggable } from \"react-beautiful-dnd\";\n\nfunction PartFormlet(props) {\n\n  const removePart = function() {\n    props.removePart(props.index)\n  }\n\n  const handleFormChange = function(e)  {\n    props.updatePart(props.index, e.target.name, e.target.value);\n  }\n\n  const handleFileUpload = function(e) {\n    props.updatePart(props.index, e.target.name, e.target.files[0]);\n  }\n\n  const className = function() {\n    return (props.part.mode === \"edit\" ? \"PartFormlet edit-part\" : \"PartFormlet\")\n  }\n\n  return (\n    <Draggable \n      draggableId={props.part.key} \n      index={props.index}\n      disabled={props.noDrag}\n    >\n      {(provided) => {\n        return <li \n          className={className()}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n        >\n          <h4 className=\"part-number\">{`Part ${props.index + 1}`}</h4>\n          <input \n            type=\"text\" \n            name=\"name\" \n            className=\"text-input\"\n            placeholder=\"Name\"\n            value={props.part.name} \n            onChange={handleFormChange}\n            required\n          />\n          <input \n            type=\"text\" \n            name=\"initial\" \n            className=\"text-input initial-input\"\n            placeholder=\"Initial\"\n            value={props.part.initial} \n            onChange={handleFormChange}\n            required\n          />\n          <button type=\"button\" className=\"remove-part-btn\" onClick={removePart}>\n            <CancelIcon />\n          </button>\n          <RecordingInput\n            mode={props.part.mode}\n            handleFileUpload={handleFileUpload}\n          />\n        </li>\n      }}\n    </Draggable>\n    \n  )\n}\n\nexport default PartFormlet","import uniqid from \"uniqid\";\n\nfunction Part(params) {\n\n  const editableProps = [\"initial\", \"name\", \"recording\", \"pitch_order\"]\n\n  const emptyEditableProps = function() {\n    return editableProps.reduce((props, propName) => {\n      props[propName] = \"\";\n      return props;\n    }, {})\n  }\n\n  const data = function() {\n    const formData = new FormData();\n    editableProps.forEach(propName => {\n      formData.append(propName, this[propName]);\n    });\n\n    return formData;\n  }\n  \n  const preparePart = function() {\n    if (params) {\n      return {\n        ...params,\n        recording: \"existing\",\n        mode: \"edit\",\n        key: uniqid()\n      }\n    } else {\n      return {\n        ...emptyEditableProps(),\n        mode: \"new\",\n        key: uniqid()\n      }\n    }\n  }\n  \n  const part = preparePart();\n\n  return {\n    ...part,\n    data\n  }\n}\n\nexport default Part;","import { apiUrl } from \"../apiUrl\";\nimport makeRequest from \"./makeRequest\";\n\nasync function destroySong(songId, authToken) {\n    return await makeRequest(`${apiUrl}/songs/${songId}`, \"json\", {\n      method: \"delete\",\n      headers: { Authorization: `Bearer ${authToken}` },\n      timeout: 3000\n    });\n}\n\nexport default destroySong;","import { apiUrl } from \"../apiUrl\";\nimport makeRequest from \"./makeRequest\";\n\nasync function destroyPart(songId, partId, authToken) {\n  return await makeRequest({\n    method: \"delete\",\n    url: `${apiUrl}/songs/${songId}/parts/${partId}`,\n    headers: { Authorization: `Bearer ${authToken}` },\n    timeout: 3000\n  }) \n}\n\nexport default destroyPart;","import makeRequest from \"./makeRequest\";\nimport {apiUrl} from \"../apiUrl\";\n\nfunction SongSender(token) {\n\n  const songController = new AbortController();\n  let song;\n  const parts = [];\n\n\n  function packageRecord(data, id) {\n    const abortController = new AbortController();\n    return {data, id, abortController, sent: false}\n  }\n\n  function addSong(data, id) {\n    if (song) {throw new Error(\"Song already registered\")}\n    song = packageRecord(data, id);\n    return song.abortController;\n  }\n\n  function addPart(data, id) {\n    const partPackage = packageRecord(data, id);\n    parts.push(partPackage);\n    return partPackage.abortController\n  }\n\n  function songUrl() {\n    return (song.id ? `${apiUrl}/songs/${song.id}` : `${apiUrl}/songs`);\n  }\n\n  function partUrl(part) {\n    return (part.id ? `${apiUrl}/songs/${song.id}/parts/${part.id}` : `${apiUrl}/songs/${song.id}/parts`);\n  }\n\n  function method(id) {\n    return (id ? \"patch\" : \"post\");\n  }\n\n  function recordOptions(record, timeout) {\n    return {\n      method: method(record.id),\n      body: record.data,\n      headers: { Authorization: `Bearer ${token}` },\n      signal: songController.signal,\n      timeout: timeout\n    };\n  }\n\n\n\n  async function sendSong() {\n    if (song === undefined) {\n      throw new Error(\"Song not registered\");\n    }\n\n    recordOptions(song, 3000)\n    const songResponse = await makeRequest(songUrl(), \"json\", recordOptions(song, 3000));\n    if (!song.id) {\n      // If this is a new song, then get and store the\n      // newly created song id to use for the parts requests\n      song.id = songResponse.id;\n\n    }\n\n    return songResponse;\n\n\n  }\n\n  async function sendNextPart() {\n    if (!song) {\n      throw new Error(\"No song registered\");\n    } else if (!song.id) {\n      throw new Error(\"Cannot send part: song not yet created\");\n    } else if (parts.length === 0) {\n      throw new Error(\"No parts registered\");\n    } else if (parts.every(part => part.sent)) {\n      throw new Error(\"Cannot send part: all parts already sent\");\n    }\n\n    const unsentParts = parts.filter(part => !part.sent);\n    const nextPart = unsentParts[0];\n    nextPart.sent = true;\n\n    \n    return await makeRequest(partUrl(nextPart), \"json\", recordOptions(nextPart, 15000));\n  }\n\n  return {\n    addSong,\n    addPart,\n    sendSong,\n    sendNextPart,\n    get hasNextPart() {\n      // return true if not all parts marked sent\n      return !parts.every(part => part.sent);\n    }\n  };\n}\n\nexport default SongSender;","function ImmutableList(items, initializer) {\n  const simpleGet = () => Object.freeze(items.map(Object.freeze));\n  const initializerGet = () => Object.freeze([Object.freeze(initializer())]);\n  const get = function() {\n    if(items && items.length > 0) {\n      return simpleGet();\n    } else if(initializer) {\n      return initializerGet();\n    } else {\n      return [];\n    }\n  }\n  const add = function(newItem) {\n    return ImmutableList([...items, newItem]);\n  }\n  const remove = function(index) {\n    if(items.length > 1) {\n      const newItems = [...items];\n      newItems.splice(index, 1);\n      return ImmutableList(newItems);\n    } else {\n      return this;\n    }\n  }\n\n  const change = function(targetIndex, prop, newValue) {\n    const updatedItems = items.map((item, itemIndex) => {\n      if (itemIndex === targetIndex) {\n        const updatedItem = {...item};\n        updatedItem[prop] = newValue;\n        return updatedItem;\n      } else {\n        return item;\n      }\n    });\n    return ImmutableList(updatedItems);\n  }\n\n  const findIndex = function(key, value) {\n    items.findIndex(item => {\n      return item[key] === value\n    })\n  }\n\n  const move = function(fromIndex, toIndex) {\n    const movingItem = items[fromIndex];\n    items.splice(fromIndex, 1);\n    items.splice(toIndex, 0, movingItem)\n    return ImmutableList(items)\n  }\n\n  return Object.freeze({\n    get,\n    add,\n    remove,\n    change,\n    findIndex,\n    move\n  });\n}\n\nexport default ImmutableList;","import PartFormlet from \"./PartFormlet.js\"\nimport { useState } from \"react\";\nimport Part from \"../models/Part\";\nimport \"../style/SongForm.css\";\nimport destroySong from \"../network/destroySong.js\";\nimport destroyPart from \"../network/destroyPart.js\";\nimport SongSender from \"../network/SongSender.js\";\nimport ImmutableList from \"../helpers/ImmutableList.js\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nfunction SongForm(props) {\n\n  const initializeTitle = function() {\n    //If we are editing the song, initialize with existing title; \n    //otherwise intialize with a blank title\n    return (props.statusInfo.factoryMode === \"edit\" ? props.editableSong.title : \"\")\n  }\n\n  //If the SongForm is for a new song or for one without any fulfilled parts,\n    //return an ImmutableList with a single blank Part\n  const [parts, setParts] = useState(() => { \n    const partsArray = (props.editableParts ? props.editableParts.map(Part) : []);\n    return ImmutableList(partsArray, Part)\n  });\n\n  const [title, setTitle] = useState(() => initializeTitle());\n  \n  const closeForm = () => props.setStatusInfo(statusInfo => statusInfo.reset());\n\n  const handleChange = e => setTitle(e.target.value);\n\n  const addPart = () => setParts(parts => parts.add(Part()));\n\n  const removePart = index => setParts(parts => parts.remove(index));\n\n  const updatePart = function(partIndex, prop, newValue) {\n     setParts(parts => parts.change(partIndex, prop, newValue));\n  }\n\n  const assembleLoadingsObject = function(loadingParts) {\n    props.setLoadings(loadings => {\n      loadings = {}\n      loadingParts.forEach(part => {\n        loadings[part.name] = {success: false, mode: part.mode}\n      });\n      return {...loadings}\n    });\n  }\n\n  const indicateSuccess = function(partName) {\n    props.setLoadings(loadings => {\n      loadings[partName].success = true;\n      return {...loadings};\n    });\n  }\n\n  const getObsoleteParts = function() {\n    const oldParts = Object.values(props.editableParts);\n    //Filter out the new parts (which don't have an id)\n    //and get the ids of the remaining parts (which are being updated)\n    const updatingPartIds = parts.get().filter(part => part.id).map(part => part.id);\n    return oldParts.filter(part => !updatingPartIds.includes(part.id));\n  }\n\n  const deleteObsoleteParts = function() {\n    const obsoleteParts = getObsoleteParts();\n    props.setLoadings(loadings => {\n      //Add a loading object for each part to loadings\n      obsoleteParts.forEach(part => {\n        loadings[part.name] = {success: false, mode: \"destroy\"}\n      })\n      return {...loadings}\n    })\n    obsoleteParts.forEach(part => {\n      destroyExistingPart(props.editableSong.id, part)\n    });\n  }\n\n  const destroyExistingSong = async function() {\n    \n    props.setStatusInfo(statusInfo => statusInfo.setDestroy());\n\n    try {\n      await destroySong(\n        props.editableSong.id, \n        props.token\n      );\n\n      props.setStatusInfo(statusInfo => statusInfo.setSuccess());\n\n    } catch(err) {\n      console.log(err);\n      props.setStatusInfo(statusInfo => statusInfo.setFailure());\n    }\n  }\n  \n  const destroyExistingPart = async function(songId, part) {\n    try {\n      await destroyPart(songId, part.id, props.token);\n      //If the part destroys succesfully, update loadings object\n      indicateSuccess(part);\n    } catch(err) {console.log(err)}\n  }\n\n  const preparePartData = function(part) {\n    part.pitch_order = parts.indexOf(part);\n    return part.data();\n  }\n\n  const prepareSongData = function() {\n    const songData = new FormData();\n    songData.append(\"title\", title)\n    songData.append(\"parts_promised\", parts.length)\n    //Hard-coded as HT choir for now\n    songData.append(\"choir_id\", 1)\n    return songData;\n  }\n\n  const createOrUpdateSong = function(sender) {\n    //POST or PATCH the Song\n    const songData = prepareSongData();\n    const abortControllers = [];\n    const songId = (props.editableParts ? props.editableParts.id : null)\n    const songController = sender.addSong(songData, songId);\n    abortControllers.push(songController);\n    props.setAbortControllers([...abortControllers]);\n    return sender.sendSong();\n  }\n\n  const createOrUpdateParts = function(sender) {\n    const abortControllers = [];\n    // For each part, prepare the data and send the part,\n    // storing the abortController in state, and returning an\n    // array of the requests\n    const partRequests = parts.get().reduce((requestArray, part) => {\n      const partData = preparePartData(part)\n      abortControllers.push(sender.addPart(partData, part.id));\n      requestArray.push(sender.sendNextPart());\n      return requestArray;\n    }, []);\n\n    props.setAbortControllers([...abortControllers]);\n    return partRequests\n  }\n\n  const submitSong = async function() {\n    ///Add a loading object for each part to loadings\n    assembleLoadingsObject(parts);\n    //If this is a PATCH and there any parts being removed, delete them\n    if (props.editableParts) {\n      deleteObsoleteParts();\n    }\n\n    const sender = SongSender(props.token);\n\n    //Send the song\n    try {\n      await createOrUpdateSong(sender)\n    } catch (err) {\n      props.setStatusInfo(statusInfo => statusInfo.setFailure());\n      console.log(err);\n    }\n  \n    //After sending the Song, send each of the Song's Parts\n    try {\n      var partRequests = createOrUpdateParts(sender)\n    } catch (err) {\n      props.setStatusInfo(statusInfo => statusInfo.setFailure());\n      console.log(err);\n    }\n\n    partRequests.forEach(async partRequest => {\n      indicateSuccess((await partRequest).name);\n    })\n  }\n\n  const submitValue = function() {\n    return (props.statusInfo.factoryMode === \"new\" ? \"Submit Song\" : \"Update Song\")\n  }\n\n  const deleteBtn = function() {\n    //If we are editing an existing song, display button to delete Song\n    if (props.statusInfo.factoryMode === \"edit\") {\n      return (\n        <button type=\"button\" className=\"pseudo-btn\" onClick={handleDestroySong}>Delete Song</button>\n      )\n    }\n  }\n\n  const handleDestroySong = function() {\n    if(window.confirm(\"Do you really want to delete this song?\")) {\n      destroyExistingSong();\n    }\n  }\n\n  const handleSubmit = function(e) {\n    e.preventDefault();\n    //set jobStatus to the appropriate delivery status\n    props.setStatusInfo(statusInfo => statusInfo.setDelivery());\n    submitSong();\n  }\n\n  const onDragEnd = function({destination, source}) {\n    if(!destination || destination.index === source.index) {\n      return;\n    }\n\n    setParts(parts => parts.move(source.index, destination.index))\n\n  }\n\n  return (\n    <form className=\"SongForm\" onSubmit={handleSubmit}>\n      <div className=\"title-bar\">\n        <input \n          type=\"text\" \n          name=\"title\" \n          className=\"text-input song-title-input\"\n          placeholder=\"Song Title\"\n          value={title} \n          onChange={handleChange}\n          required\n        />\n      </div>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"partsList\">\n          {(provided) => {\n            return (\n              <ul \n                id=\"parts-list\"\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n              >\n                {parts.get().map((part, index) => {\n                  return <PartFormlet\n                      index={index} \n                      key={part.key} \n                      part={part}\n                      updatePart={updatePart}\n                      removePart={removePart}\n                      noDrag={parts.get().length === 0}\n                    />\n                })}\n                {provided.placeholder}\n              </ul>\n            )\n          }}\n        </Droppable>\n      </DragDropContext>\n      \n      <div className=\"main-form-btns\">\n        <button \n          type=\"button\" \n          className=\"pseudo-btn\" \n          id=\"add-part-btn\" \n          onClick={addPart}\n        >\n          Add Part\n        </button>\n        <button type=\"button\" className=\"song-form-cancel pseudo-btn\" onClick={closeForm}>\n          Cancel\n        </button>\n        {deleteBtn()}\n        <input type=\"submit\" className=\"pseudo-btn\" value={submitValue()}/>\n      </div>\n      \n    </form>\n  )\n}\n\nexport default SongForm;","import \"../style/PartLoadingEntry.css\";\n\nfunction PartLoadedEntry(props) {\n\n  const loadedEntryVerbs = function() {\n    // Return status verbs based on whether mode is new, edit, or destroy\n    if (props.loading.mode === \"new\") {\n      return {working: \"Loading\", finished: \"Loaded\"}\n    } else if (props.loading.mode === \"edit\") {\n      return {working: \"Updating\", finished: \"Updated\"}\n    } else if (props.loading.mode === \"destroy\") {\n      return {working: \"Destroying\", finished: \"Destroyed\"}\n    }\n  }\n  const content = function() {\n    if (props.loading.success) {\n      return `${props.partName}: ${loadedEntryVerbs().finished}`;\n    } else {\n      return `${props.partName}: ${loadedEntryVerbs().working}`;\n    }\n  }\n\n  //Apply \"working\" or \"finished\" className depending whether loading complete\n  const className = () => (props.loading.success ? \"finished\" : \"working\");\n\n  return (\n    <div className=\"PartLoadedEntry\" >\n      <span className={className()}>{content()}</span>\n    </div>\n  )\n}\n\nexport default PartLoadedEntry;","import PartLoadingEntry from \"./PartLoadingEntry.js\";\nimport \"../style/SubmitProgress.css\"\n\nfunction SubmitProgress(props) {\n \n  const topMessage = function() {\n    switch (props.statusInfo.jobStatus) {\n      case \"creating\":\n       return \"Creating song...\";\n      case \"updating\":\n        return \"Updating song...\"\n      case \"destroying\":\n        return \"Destroying song...\";\n      default:\n        return \"\";\n    }\n  }\n\n  const progressStatus = function() {\n    if (props.factoryMode === \"delivery\") {\n      return Object.entries(props.loadings).map(partLoadingEntry => {\n        return (\n          <PartLoadingEntry\n            partName={partLoadingEntry[0]}\n            loading={partLoadingEntry[1]}\n            key={`${partLoadingEntry[0]}-key`}\n          />\n        )\n      })\n    } else {\n      return \"\"\n    }\n  }\n\n  const responseMessage = function() {\n    switch (props.statusInfo.jobStatus) {\n      case \"submitted\":\n        return \"Song successfully created!\";\n      case \"updated\":\n        return \"Song succesfully updated!\";\n      case \"destroyed\":\n        return \"Song successfully destroyed!\";\n      case \"failedToCreate\":\n        return \"Rats! Song creation could not be completed\";\n      case \"failedToUpdate\":\n      return \"Rats! Song could not be succesfully updated\"\n      case \"failedToDestroy\":\n        return \"Rats! Song could not be succesfully destroyed\";\n      default:\n        return \"\";\n    }\n  }\n    \n  return (\n    <div className=\"SubmitProgress\">\n      <span className=\"top-message\">{topMessage()}</span>\n      <div className=\"progress-status\">\n        {progressStatus()}\n        <span className=\"report-message\">{responseMessage()}</span>\n      </div>\n    </div>\n  )\n}\n\nexport default SubmitProgress;","import SongForm from \"./SongForm.js\";\nimport SubmitProgress from \"./SubmitProgress.js\"\nimport { useState, useEffect } from \"react\";\nimport \"../style/SongFactory.css\";\n\nfunction SongFactory(props) {\n  //loadings is an object of loading objects\n  //Each loading object has 2 keys, success (Boolean) \n  //, and mode (String: \"create\", \"update\", or \"destroy\")\n  const [loadings, setLoadings] = useState({})\n \n  const handleNewSong = function() {\n    props.setStatusInfo(statusInfo => {\n      statusInfo.jobStatus = \"assembly\";\n      statusInfo.factoryMode = \"new\";\n    })\n  }\n\n \n  const content = function() {\n    switch (props.statusInfo.factoryMode) {\n      //If we are creating or updating a song, render the SongForm\n      case \"new\":\n        return (\n          <SongForm\n            token={props.token}\n            statusInfo={props.statusInfo}\n            setStatusInfo={props.setStatusInfo}\n            setLoadings={setLoadings}\n            loadings={loadings}\n            setAbortControllers={props.setAbortControllers}\n          />\n        );\n      case \"edit\":\n        return (\n          <SongForm\n            token={props.token}\n            statusInfo={props.statusInfo}\n            setStatusInfo={props.setStatusInfo}\n            setLoadings={setLoadings}\n            loadings={loadings}\n            editableSong={props.editableSong}\n            editableParts={props.editableParts}\n            setAbortControllers={props.setAbortControllers}\n          />\n        );\n      //If we are submitting the SongForm, or if we are destroying a song,\n      //render SubmitProgress\n      case \"delivery\":\n      case \"destruction\":\n        return (\n          <SubmitProgress \n            loadings={loadings}\n            statusInfo={props.statusInfo}\n          />\n        );\n      default:\n        return (\n          <span className=\"prompt\">\n            Create a song or select one to edit\n          </span>\n        )\n    }\n  }\n\n  const button = function() {\n    //If a job isn't in progress, show the new song button\n    console.log(props.statusInfo.jobStatus, props.statusInfo.isInProgress(), props.statusInfo.factoryMode);\n    if (!props.statusInfo.isInProgress()) {\n      return (\n        <button \n          className=\"pseudo-btn\" \n          id=\"new-song-btn\" \n          onClick={handleNewSong}\n        >\n          New Song\n        </button>\n      )\n    }\n  }\n\n  useEffect(() => {\n    //If all parts are loading, mark job as finished\n    if (Object.values(loadings).every(loading => loading.success) &&\n        Object.values(loadings).length > 0) {\n        props.setStatusInfo(statusInfo => statusInfo.setSuccess())\n    }\n    //eslint-disable-next-line\n  }, [loadings]);\n\n  return (\n    <div className=\"SongFactory\">\n      <div className=\"central-container\">\n        {button()}\n        {content()}\n      </div>\n    </div>\n  )\n}\n\nexport default SongFactory;","import EditIcon from \"@material-ui/icons/Edit\";\nimport \"../style/SongInfo.css\"\n\nfunction SongInfo(props) {\n\n\n  const editButton = function() {\n    //If a job not currently being assembled or executed, display edit button\n    if(props.statusInfo.isInProgress()) {\n      return \"\";\n    } else {\n      return (\n        <button type=\"button\" className=\"edit-btn\" onClick={handleEdit}>\n          <EditIcon />\n        </button>\n      );\n    }\n  }\n\n  const handleEdit = function() {\n    props.editSong(props.song)\n  }\n\n\n  return (\n    <div className=\"SongInfo\">\n      <div className=\"song-info-title-bar\">\n        <h5 className=\"song-info-title\">{props.song.title}</h5>\n        {editButton()}\n      </div>\n      \n    </div>\n  )\n}\n\nexport default SongInfo;","import SongInfo from \"./SongInfo.js\";\nimport \"../style/CurrentCollection.css\"\n\nfunction CurrentCollection(props) {\n\n  const songs = function() {\n    //If parts have been loaded and set in state, render SongInfo list\n    return props.songs.map(song => {\n      return (\n        <SongInfo\n          song={song}\n          editSong={props.editSong}\n          key={song.id}\n          statusInfo={props.statusInfo}\n        />\n      )\n    })\n  }\n  return (\n    <div className=\"CurrentCollection\">\n      {songs()}\n    </div>\n  )\n}\n\nexport default CurrentCollection;","import {apiUrl} from \"../apiUrl\";\nimport makeRequest from \"./makeRequest\"\n\n\nasync function getAdminSongs(choirId, token) {\n  //fetch songs from Rails API\n    const choirEdit = await makeRequest(`${apiUrl}/choirs/${choirId}/edit`, \"json\", {\n      headers: { Authorization: `Bearer ${token}` }\n    });\n\n    return choirEdit.songs\n}\n\nexport default getAdminSongs;\n\n","import { useState } from \"react\";\n\n\nfunction useShallowMutation(initialObj) {\n  const [value, setValue] = useState(initialObj);\n\n  const wrappedSetValue = function(callback) {\n    setValue(obj => {\n      const copiedObj = {...obj};\n      callback(copiedObj);\n      return copiedObj;\n    });\n  }\n\n  return [value, wrappedSetValue];\n}\n\nexport default useShallowMutation;","function StatusInfo() {\n  let jobStatus = \"none\";\n  let factoryMode = \"idle\";\n\n  const isValidJobStatus = function(status) {\n    return (\n      status === \"none\" ||\n      status === \"assembly\" ||\n      status === \"creating\" ||\n      status === \"created\" ||\n      status === \"failedToCreate\" ||\n      status === \"updating\" ||\n      status === \"updated\" ||\n      status === \"failedToUpdate\" ||\n      status === \"destroying\" ||\n      status === \"destroyed\" ||\n      status === \"failedToDestroy\"\n    );\n  }\n\n  const checkJobStatusValidity = function(status) {\n    if (!isValidJobStatus(status)) {\n      throw new Error(`${status} is not a valid jobStatus`);\n    }\n  }\n\n  const isValidFactoryMode = function(mode) {\n    return (\n      mode === \"idle\" ||\n      mode === \"new\" ||\n      mode === \"edit\" ||\n      mode === \"delivery\" ||\n      mode === \"destruction\"\n    );\n  }\n\n  const checkFactoryModeValidity = function(mode) {\n    if (!isValidFactoryMode(mode)) {\n      throw new Error(`${mode} is not a valid factoryMode`);\n    }\n  }\n\n  const setFailure = function() {\n    switch(this.jobStatus) {\n      case \"creating\":\n        this.jobStatus = \"failedToCreate\";\n        break;\n      case \"updating\":\n        this.jobStatus = \"failedToUpdate\";\n        break;\n      case \"destroying\":\n        this.jobStatus = \"failedToDestroy\";\n        break;\n      default:\n        throw new Error(`Cannot setFailure when job is not in progress (jobStatus: ${this.jobStatus})`)\n    }\n\n    this.factoryMode = \"idle\";\n  }\n\n  const setSuccess = function() {\n    switch(this.jobStatus) {\n      case \"creating\":\n        this.jobStatus = \"created\";\n        break;\n      case \"updating\":\n        this.jobStatus = \"updated\";\n        break;\n      case \"destroying\":\n        this.jobStatus = \"destroyed\";\n        break;\n      default:\n        throw new Error(`Cannot setSuccess when job is not in progress (jobStatus: ${this.jobStatus})`)\n    }\n\n    this.factoryMode = \"idle\";\n  }\n\n  const setDelivery = function() {\n    switch(this.factoryMode) {\n      case \"new\":\n        this.jobStatus = \"creating\";\n        break;\n      case \"edit\":\n        this.jobStatus = \"updating\";\n        break;\n      default:\n        throw new Error(`Cannot setDelivery when factoryMode is ${this.factoryMode}`)\n    }\n    this.factoryMode = \"delivery\";\n  }\n\n  const setDestroy = function() {\n    this.jobStatus = \"destroying\";\n    this.factoryMode = \"destruction\";\n  }\n\n  const isInProgress = function() {\n    return (\n      this.jobStatus === \"assembly\" ||\n      this.jobStatus === \"creating\" ||\n      this.jobStatus === \"updating\" ||\n      this.jobStatus === \"destroying\"\n    )\n  }\n\n  const reset = function() {\n    this.factoryMode = \"idle\";\n    this.jobStatus = \"none\";\n  }\n\n  return {\n    get jobStatus() {\n      return jobStatus;\n    },\n    set jobStatus(newValue) {\n      checkJobStatusValidity(newValue);\n      jobStatus = newValue;\n    },\n    get factoryMode() {\n      return factoryMode;\n    },\n    set factoryMode(newValue) {\n      checkFactoryModeValidity(newValue);\n      factoryMode = newValue;\n    },\n    setFailure,\n    setSuccess,\n    setDelivery,\n    setDestroy,\n    isInProgress,\n    reset\n  }\n}\n\nexport default StatusInfo;","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SongFactory from \"./SongFactory.js\";\nimport CurrentCollection from \"./CurrentCollection.js\"\nimport \"../style/Admin.css\"\nimport getAdminSongs from \"../network/getAdminSongs.js\";\nimport getParts from \"../network/getParts.js\";\nimport useShallowMutation from \"../helpers/useShallowMutation.js\";\nimport StatusInfo from \"../helpers/StatusInfo.js\";\n\nfunction Admin(props) {\n  const [songs, setSongs] = useState([]);\n  const [statusInfo, setStatusInfo] = useShallowMutation(StatusInfo());\n  const [editableSong, setEditableSong] = useState(null);\n  const [editableParts, setEditableParts] = useState([]);\n  const [abortControllers, setAbortControllers] = useState([]);\n\n  const editSong = async function(song) {\n    setEditableSong(song);\n    const parts = await getParts(song.id);\n    setEditableParts(parts);\n    setStatusInfo(statusInfo => {\n      statusInfo.factoryMode = \"edit\";\n      statusInfo.jobStatus = \"assembly\";\n    });\n  }\n\n\n  //Execute on ComponentDidMount and when the CurrentCollection might change\n  useEffect(() => {\n    const loadSongs = async function() {\n      const songs = await getAdminSongs(props.choirId, props.token);\n      setSongs(songs)\n    }\n    //If the jobStatus changes and a job isn't in progress, reload the CurrentCollection\n    if (!statusInfo.isInProgress() && props.choirId) {\n        loadSongs();\n    }\n    //When Admin unmounts, cancel all of the fetch requests from SongForm\n    return () => abortControllers.forEach(controller => controller.abort());\n  // eslint-disable-next-line \n  }, [statusInfo, props.adminId])\n\n  return (\n    <div className=\"Admin\">\n      <Link to=\".\">\n        <button className=\"nav-btn\">Home</button>\n      </Link>\n      <div className=\"layout-container\">\n        <CurrentCollection\n          songs={songs}\n          editSong={editSong}\n          statusInfo={statusInfo}\n        />\n        <SongFactory \n          statusInfo={statusInfo}\n          setStatusInfo={setStatusInfo}\n          editableSong={editableSong}\n          editableParts={editableParts}\n          token={props.token}\n          setAbortControllers={setAbortControllers}\n        />\n      </div>\n    </div>\n    \n  )\n}\n\nexport default Admin;","import { Redirect } from \"react-router-dom\";\nimport Admin from \"./Admin.js\";\n\nfunction AdminFilter(props) {\n\n  //If the admin is authenticated by the presence of a token, render the Admin page.\n  //Otherwise, redirect to Login.\n  console.log(\"Here's what AdminFilter got:\", props.token);\n  return (props.token ? <Admin token={props.token} choirId={props.choirId}/> : <Redirect to=\"./login\" />)\n  \n}\n\n\nexport default AdminFilter;\n","import { apiUrl } from \"../apiUrl\";\nimport makeRequest from \"./makeRequest\";\n\nasync function attemptLogin(username, password) {\n   //Create, fill, and post Login FormData\n   const params = new FormData();\n   params.append(\"password\", password)\n   params.append(\"username\", username)\n\n   //Timeout after 4 seconds\n   return await makeRequest(`${apiUrl}/admins/login`, \"json\", {\n     method: \"post\",\n     body: params,\n     timeout: 4000\n   });\n}\n\nexport default attemptLogin;","import { useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport attemptLogin from \"../network/attemptLogin.js\";\nimport \"../style/Login.css\";\n\nfunction Login(props) {\n  \n  //Even if token is present, set isAuthed to false\n  const [isAuthed, setIsAuthed] = useState(false)\n  const [incorrectCredentials, setIncorrectCredentials] = useState(false)\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\"\n  })\n  \n  const handleChange = function(e) {\n    setFormData({...formData, [e.target.name]: e.target.value})\n  }\n\n  const setLocalToken = function(tokenString) {\n    //Set local token to remember login\n    //If localStorage is unavailable, swallow error\n    try {\n      localStorage.setItem(\"token\", tokenString);\n    } catch {}\n  }\n\n  const handleSubmit = function(e) {\n    e.preventDefault();\n    attemptLogin(formData.username, formData.password)\n    .then(decodedResponse => {\n      //If login successful, set the token in the App component\n      // and in localStorage, and indicate that the admin is authed\n      setLocalToken(decodedResponse.token)\n      props.setToken(decodedResponse.token);\n      setIsAuthed(true);\n    })\n    .catch(err => {\n      //If the response is 401 Unauthorized, indicate incorrectCredentials\n      err.isUnauthorized ? setIncorrectCredentials(true) : console.log(err)\n    })\n  }\n\n  const incorrectCredentialsMessage = function() {\n    return (incorrectCredentials ? \"Either the username or the password is incorrect\" : \"\")\n  }\n\n  if (isAuthed) {\n    return <Redirect to=\"./admin\"></Redirect>\n  } else {\n    return (\n      <div className=\"Login central-container\">\n        \n          <span id=\"incorrect-credentials-message\">\n            {incorrectCredentialsMessage()}\n          </span>\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"username\">Username</label>\n            <input \n              type=\"text\" \n              id=\"username\" \n              name=\"username\" \n              className=\"text-input\"\n              value={formData.username}\n              onChange={handleChange}\n              required\n            />\n            <label htmlFor=\"password\">Password</label>\n            <input \n              type=\"password\" \n              id=\"password\" \n              name=\"password\"\n              className=\"text-input\" \n              value={formData.password}\n              onChange={handleChange}\n              required\n            />\n            <input type=\"submit\" className=\"pseudo-btn\" value=\"Log in\"/>\n          </form>\n      </div>\n    )\n  }\n}\n\nexport default Login","import {apiUrl} from \"../apiUrl\";\nimport makeRequest from \"./makeRequest\";\n\nasync function getChoir(choirId) {\n  const apiEndpoint = `${apiUrl}/choirs/${choirId}`;\n  //Timeout after 8 seconds\n  return await makeRequest(apiEndpoint, \"json\", { timeout: 8000 });\n}\n\nexport default getChoir;","import \"../style/Home.css\";\nimport { Route, Switch, useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport Home from \"./Home\";\nimport AdminFilter from \"./AdminFilter.js\";\nimport Login from \"./Login.js\";\nimport getChoir from \"../network/getChoir\";\n\n\nfunction ChoirPage() {\n\n  const findLocalToken = function() {\n    try {\n      //Try to return token from localStorage\n      console.log(\"Found Token\", localStorage.getItem(\"token\"))\n      return localStorage.getItem(\"token\");\n    } catch (err) {\n      console.log(\"Couldn't find token\");\n      //If not permitted (becuase of Chrome Incognito 3rd-party, etc.), return null\n      return null;\n    }\n  }\n\n  const [token, setToken] = useState(findLocalToken());\n  const [songs, setSongs] = useState();\n  const { choirId } = useParams(); \n  \n  const loadChoir = async function() {\n    try {\n      const choirData = await getChoir(choirId);\n      console.log(choirData);\n      setSongs(choirData.songs);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  \n  useEffect(() => {\n    //On ComponentDidMount fetch the choir resources\n    loadChoir();\n  // eslint-disable-next-line\n  }, [])\n\n  return (\n    \n    <div className=\"Choir\">\n        <Switch>\n          <Route exact path=\"/choir/:choirId\" render={(props) => <Home {...props} songs={songs} />} />\n          <Route path=\"/choir/:choirId/admin\" render={(props) => <AdminFilter {...props} token={token} choirId={choirId}/>}/>\n          <Route path=\"/choir/:choirId/login\" render={(props) => <Login {...props} setToken={setToken}/>} />\n        </Switch>\n    </div>\n    \n  )\n}\n\nexport default ChoirPage;","import { HashRouter, Route } from \"react-router-dom\";\nimport { Switch } from \"react-router-dom\";\nimport ChoirPage from \"./components/ChoirPage.js\";\n\n\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path={\"/choir/:choirId\"} component={ChoirPage}/>\n      </Switch>\n    </HashRouter>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\"\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}