{"version":3,"sources":["components/choir/PreferenceBtn.js","components/choir/Preferences.js","components/choir/ProgressMeter.js","components/choir/Controls.js","apiUrl.js","network/fetchWithTimeout.js","network/makeRequest.js","network/getParts.js","network/getPartBuffer.js","components/choir/SongPlayer.js","components/choir/SongBtn.js","helpers/stripTrailingSlash.js","components/ChoirIdContext.js","network/getChoir.js","components/choir/Home.js","components/TokenContext.js","components/AdminFilter.js","components/edit/RecordingInput.js","components/general/CancelButton.js","components/edit/PartFormlet.js","models/Part.js","network/destroySong.js","network/destroyPart.js","network/SongSender.js","helpers/ImmutableList.js","components/edit/SongForm.js","components/edit/PartLoadingEntry.js","components/edit/SubmitProgress.js","helpers/useShallowMutation.js","helpers/StatusInfo.js","components/edit/SongFactory.js","components/edit/TitleBar.js","components/edit/SongEditor.js","network/getEditableSongs.js","components/edit/EditSongs.js","helpers/removeFromObjectArray.js","components/ChoirPage.js","network/attemptLogin.js","components/Login.js","App.js","index.js"],"names":["PreferenceBtn","props","className","selected","role","classList","onClick","handler","partName","setSelectedPreference","content","Preferences","useState","selectedPreference","isSelected","style","gridTemplateColumns","parts","length","map","part","name","initial","emphasizePart","isolatePart","gridColumn","fullChoir","ProgressMeter","progressWidth","setProgressWidth","meterWidth","setMeterWidth","meterRef","useRef","useEffect","computedWidth","window","getComputedStyle","current","getPropertyValue","parseInt","slice","newProgress","timestamp","duration","ref","e","rect","target","getBoundingClientRect","newTimestamp","clientX","x","seekTrack","width","Controls","handleKeyUp","keyCode","pauseTrack","resetTrack","playing","onKeyUp","playTrack","apiUrl","resource","options","timeout","controller","AbortController","id","setTimeout","abort","fetch","signal","response","clearTimeout","fetchWithTimeout","parser","isNetworkError","body","ok","status","err","Error","message","isUnauthorized","bodyContent","console","log","makeRequest","songId","abortSignal","apiEndpoint","getParts","partUrl","splitArray","split","splice","newUrl","join","request","Request","getPartBuffer","SongPlayer","setDuration","setTimestamp","setPlaying","loading","setLoading","setParts","seekingWhilePlaying","setSeekingWhilePlaying","audioRef","data","gainNodes","sourceNodes","loaded","ctxRef","ctx","audioContext","time","updaterRef","getData","recording_url","buffer","decodeAudioData","decodedData","allLoaded","Object","values","forEach","then","source","createBufferSource","connect","destination","start","onended","playData","stop","emphasizedPart","gain","value","isolatedPart","loadParts","partsData","node","createGain","previousTime","currentTime","setInterval","timeElapsedSinceLastUpdate","t","clearInterval","title","charAt","preferences","SongBtn","setSelectedSong","stripTrailingSlash","url","createContext","choirId","getChoir","Home","choir","setChoir","selectedSong","AudioContext","useContext","ChoirIdContext","loadChoir","abortController","choirData","to","match","choir_details","songs","song","songContent","songPlayers","AdminFilter","token","setToken","targetPath","children","ErrorHandler","error","RedirectToLogin","pathname","state","TokenContext","Provider","FallbackComponent","RecordingInput","mode","acceptNewRecording","setAcceptNewRecording","overrideRecording","revertToOldRecording","type","accept","onChange","handleFileUpload","required","Button","styled","button","CancelButton","ButtonWrapper","div","PartFormlet","removePart","index","handleFormChange","updatePart","files","draggableId","key","disabled","noDrag","provided","draggableProps","dragHandleProps","innerRef","placeholder","Part","params","editableProps","recording","uniqid","reduce","propName","formData","FormData","append","addPitchOrder","order","this","pitch_order","authToken","method","headers","Authorization","destroySong","partId","destroyPart","SongSender","songController","packageRecord","sent","songUrl","recordOptions","record","undefined","songResponse","every","unsentParts","filter","nextPart","addSong","addPart","partPackage","push","sendSong","sendNextPart","hasNextPart","ImmutableList","items","initializer","processedGet","freeze","get","add","newItem","remove","newItems","change","targetIndex","prop","newValue","item","itemIndex","updatedItem","findIndex","move","fromIndex","toIndex","movingItem","SongForm","partsArray","editableParts","statusInfo","factoryMode","editableSong","setTitle","abortControllers","setAbortControllers","partIndex","assembleLoadingsObject","loadingParts","setLoadings","loadings","success","indicateSuccess","deleteObsoleteParts","obsoleteParts","oldParts","updatingPartIds","includes","getObsoleteParts","destroyExistingPart","destroyExistingSong","setStatusInfo","setDestroy","newController","setSuccess","setFailure","createOrUpdateSong","sender","songData","prepareSongData","createOrUpdateParts","newControllers","partRequests","assign","requestArray","partData","preparePartData","submitSong","partRequest","handleDestroySong","confirm","controlller","onSubmit","preventDefault","setDelivery","onDragEnd","droppableId","droppableProps","deleteBtn","PartLoadedEntry","loadedEntryVerbs","working","finished","SubmitProgress","jobStatus","topMessage","entries","partLoadingEntry","responseMessage","useShallowMutation","initialObj","setValue","callback","obj","copiedObj","StatusInfo","isValidJobStatus","checkJobStatusValidity","isValidFactoryMode","checkFactoryModeValidity","isSuccessful","isInProgress","reset","SongFactory","loadSongs","closeEditor","setEditableParts","TitleBar","ListElement","li","SongEditor","isOpen","openCloseSwitch","contains","closeButton","choirEdit","getEditableSongs","List","ul","AddButton","EditSongs","setSongs","selectedSongId","setSelectedSongId","handleError","useErrorHandler","array","copy","removeFromObjectArray","newSong","ChoirPage","localStorage","getItem","findLocalToken","useParams","exact","path","component","render","username","password","attemptLogin","Login","isAuthed","setIsAuthed","incorrectCredentials","setIncorrectCredentials","setFormData","handleChange","location","decodedResponse","tokenString","setItem","setLocalToken","catch","htmlFor","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cb238a54.chunk.js","sourcesContent":["import \"../../style/choir/PreferenceBtn.css\";\n\nfunction PreferenceBtn(props) {\n\n  const classList = function() {\n    const selected = (props.selected ? \" selected\" : \"\")\n    if (props.role === \"full-choir\") {\n      return \"PreferenceBtn full-choir\" + selected\n    } else {\n      return \"PreferenceBtn\" + selected\n    }\n  }\n\n  const handleClick = function() {\n    //Call either emphasizePart or isolatePart\n    props.handler(props.partName)\n    //Apply the \"selected\" className by setting selectedPreference in state\n    props.setSelectedPreference({\n      role: props.role,\n      partName: props.partName\n    });\n  }\n\n  return (\n    <button className={classList()} onClick={handleClick}>\n      {props.content}\n    </button>\n  )\n}\n\nexport default PreferenceBtn;","import { useState } from \"react\";\nimport PreferenceBtn from \"./PreferenceBtn.js\";\nimport \"../../style/choir/Preferences.css\";\n\nfunction Preferences(props) {\n  const [selectedPreference, setSelectedPreference] = useState({\n    role: \"full-choir\",\n    partName: null\n  });\n  \n  const isSelected = function(role, partName) {\n    return (selectedPreference.role === \"full-choir\" && role === \"full-choir\") ||\n          (selectedPreference.role === role && selectedPreference.partName === partName);\n  }\n  \n  return (\n    <div \n      className=\"Preferences\" \n      style={{gridTemplateColumns: `repeat (${props.parts.length}, auto)`}}\n    >  \n      \n        <span>Emphasize</span>\n        {props.parts.map(part => {\n          return (\n            <PreferenceBtn \n              key={`emphasize-${part.name}`}\n              partName={part.name}\n              content={part.initial}\n              role=\"emphasize\" \n              handler={props.emphasizePart}\n              selected={isSelected(\"emphasize\", part.name)}\n              setSelectedPreference={setSelectedPreference}\n            />\n          )\n        })}\n   \n        <span>Isolate</span>\n        {props.parts.map(part => {\n          return (\n            <PreferenceBtn \n              key={`isolate-${part.name}`}\n              partName={part.name}\n              content={part.initial}\n              role=\"isolate\" \n              handler={props.isolatePart}\n              selected={isSelected(\"isolate\", part.name)}\n              setSelectedPreference={setSelectedPreference}\n            />\n          )\n        })}\n\n        <div \n          className=\"full-choir-container\"\n          style={{gridColumn: `2 / ${props.parts.length + 2}`}}\n        >\n          <PreferenceBtn \n            onClick={props.fullChoir}\n            selected={isSelected(\"full-choir\")}\n            role={\"full-choir\"}\n            content=\"Full Choir\"\n            handler={props.fullChoir}\n            setSelectedPreference={setSelectedPreference}\n          />\n        </div>\n    </div>\n  )\n}\n\nexport default Preferences;","import {useRef, useState, useEffect} from \"react\";\nimport \"../../style/choir/ProgressMeter.css\"\n\nfunction ProgressMeter(props) {\n  \n  \n  const [progressWidth, setProgressWidth] = useState(0);\n  const [meterWidth, setMeterWidth] = useState(0);\n  let meterRef = useRef();\n\n  const updateProgress = function() {\n    // Set new width of progress bar based on fraction of track completed\n    const newProgress = (props.timestamp / props.duration) * meterWidth;\n    setProgressWidth(newProgress);\n  }\n\n  const handleSeek = function(e) {\n    const rect = e.target.getBoundingClientRect();\n    const clickPosition = e.clientX - rect.x;\n    //Seek track to new timestamp based on click position within the meter\n    const newTimestamp = (clickPosition / meterWidth) * props.duration;\n    props.seekTrack(newTimestamp);\n  }\n\n    useEffect(() => {\n      //Get the actual width of the progressMeter\n      const computedWidth = (\n        window.getComputedStyle(meterRef.current).getPropertyValue(\"width\")\n      )\n      //Get rid of \"px\" and convert to Integer\n      setMeterWidth(parseInt(computedWidth.slice(0, 3)));\n    // eslint-disable-next-line\n    }, [])\n\n    //Update position of progress bar every time the timestamp updates\n    // eslint-disable-next-line\n    useEffect(updateProgress, [props.timestamp])\n\n  \n  return (\n    <div className=\"ProgressMeter\" ref={meterRef} onClick={handleSeek}>\n      <div className=\"progress-bar\" style={{width: progressWidth}}></div>\n    </div>\n  )\n}\n\nexport default ProgressMeter;","import ProgressMeter from \"./ProgressMeter.js\";\nimport PlayIcon from \"@material-ui/icons/PlayArrowRounded\";\nimport PauseIcon from \"@material-ui/icons/PauseRounded\";\nimport ResetIcon from \"@material-ui/icons/ReplayRounded\";\nimport \"../../style/choir/Controls.css\";\n\nfunction Controls(props) {\n  const handleKeyUp = function(e) {\n    if (e.keyCode === 32) {\n      props.pauseTrack();\n    }\n  }\n\n  const playOrPauseBtn = function() {\n    if (props.playing) {\n      return (\n      <button \n        className=\"control-btn\" \n        onClick={props.pauseTrack}\n        onKeyUp={handleKeyUp}\n      >\n        <PauseIcon />\n      </button>\n      )\n    } else {\n      return (\n      <button \n        className=\"control-btn\" \n        onClick={props.playTrack}\n      >\n        <PlayIcon />\n      </button>\n      )\n    }\n  }\n\n  return (\n    <div className=\"Controls\">\n      <button className=\"control-btn\" onClick={props.resetTrack}>\n        <ResetIcon />\n      </button>\n      {playOrPauseBtn()}\n      <div className=\"progress-meter-container\">\n        <ProgressMeter \n          seekTrack={props.seekTrack} \n          duration={props.duration}\n          timestamp={props.timestamp}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Controls;","export const apiUrl = \"https://choral-tracks-rails.up.railway.app/api\"\n","//This is lifted from a Dmitri Pavlutin article\n\nasync function fetchWithTimeout(resource, options = {}) {\n  const { timeout } = options;\n  const controller = new AbortController();\n  const id = setTimeout(() => controller.abort(), timeout);\n  const response = await fetch(resource, {\n    signal: controller.signal,\n    ...options\n  });\n  clearTimeout(id);\n  return response;\n}\n\nexport default fetchWithTimeout;","import fetchWithTimeout from \"./fetchWithTimeout\";\n\n\nasync function makeRequest(resource, parser, options = {}) {\n\n  let response;\n  const timeout = (options ? options.timeout : null);\n\n  try {\n    //fetch the resource \n    if (timeout > 0) {\n      response = await fetchWithTimeout(resource, options);\n    } else {\n      response = await fetch(resource, options);\n    }\n  } catch(err) {\n    //attach isNetworkError flag for fetch error\n    err.isNetworkError = true;\n    throw err;\n  }\n \n  const body = await response[parser]();\n\n  if (response.ok) {\n    return body;\n    //For 401 unauthorized response, throw error with isUnauthorized flag\n  } else if(response.status === 401) {\n    const err = new Error(response.message);\n    err.isUnauthorized = true\n    throw err\n    //For all other non-2xx responses, throw error and log response to console for debugging\n  } else {\n    response.bodyContent = body;\n    console.log(response);\n    throw new Error(\"Software Bug\");\n  }\n\n}\n\nexport default makeRequest","import { apiUrl } from \"../apiUrl\";\nimport makeRequest from \"./makeRequest\";\n\nasync function getParts(songId, abortSignal) {\n  const apiEndpoint = `${apiUrl}/songs/${songId}/parts`;\n  // Timeout after 8 seconds\n  return await makeRequest(apiEndpoint, \"json\", { timeout: 2000, signal: abortSignal})\n}\n\nexport default getParts;","import makeRequest from \"./makeRequest\";\n\nasync function getPartBuffer(partUrl) {\n  // Convert extension to .mp3 before fetching from Cloudinary\n  const splitArray = partUrl.split(\".\");\n  splitArray.splice((splitArray.length - 1), 1, 'mp3')\n  const newUrl = splitArray.join(\".\");\n  \n  const request = new Request(newUrl);\n  // Timeout after 8 seconds\n  return await makeRequest(request, \"arrayBuffer\", { timeout: 8000});\n}\n\nexport default getPartBuffer;","import { useState, useEffect, useRef } from \"react\";\nimport LoadingMask from \"react-loadingmask\";\nimport \"react-loadingmask/dist/react-loadingmask.css\";\nimport Preferences from \"./Preferences.js\"\nimport Controls from \"./Controls.js\";\nimport \"../../style/choir/SongPlayer.css\";\nimport getParts from \"../../network/getParts\";\nimport getPartBuffer from \"../../network/getPartBuffer.js\";\n\nfunction SongPlayer(props) {\n  //Set duration to an arbitrarily long amount of time until song loads\n  const [duration, setDuration] = useState(10000);\n  const [timestamp, setTimestamp] = useState(0);\n  const [playing, setPlaying] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [parts, setParts] = useState([])\n  const [seekingWhilePlaying, setSeekingWhilePlaying] = useState(false);\n  let audioRef = useRef({\n    data: {},\n    gainNodes: {},\n    sourceNodes: {},\n    loaded: {}\n  });\n  const ctxRef = useRef({\n    ctx: props.audioContext,\n    time: 0\n  })\n\n  const updaterRef = useRef();\n\n  const getData = async function(part) {\n  const buffer = await getPartBuffer(part.recording_url);\n    return ctxRef.current.ctx.decodeAudioData(buffer, decodedData => {\n      audioRef.current.loaded[part.name] = true;\n      console.log(part.name, \"loaded\");\n      if (allLoaded()) { setLoading(false); }\n      return decodedData;\n    });\n  }\n\n  const allLoaded = function() {\n    //Check if all the parts have been recorded as loaded\n    return (Object.values(audioRef.current.loaded).length === parts.length)\n  }\n\n  const playData = function(part) {\n    audioRef.current.data[part.name].then(decodedData => {\n      \n      // Create source node\n      const source = ctxRef.current.ctx.createBufferSource();\n      // Store the source in the sourcesRef\n      audioRef.current.sourceNodes[part.name] = source;\n      // Wire up the data\n      source.buffer = decodedData;\n      // Connect the source node to the gain node (which controls the volume)\n      source.connect(audioRef.current.gainNodes[part.name]);\n      // Connect the gain node to the destination (e.g., speakers) and start the audio\n      audioRef.current.gainNodes[part.name].connect(ctxRef.current.ctx.destination);\n      source.start(0, timestamp);\n      console.log(\"Playing AudioBuffer\", decodedData, ctxRef.current.ctx);\n      source.onended = () => {\n        console.log(\"Ended\");\n      }\n    })\n  }\n\n  const playTrack = function() {\n    if (playing) {\n      return\n    }\n    parts.forEach(part => {\n      playData(part);\n    });\n    //Indicate that play has begun\n    setPlaying(true);\n  }\n\n  const pauseTrack = function() {\n    if (playing) {\n      parts.forEach(part => {\n        console.log(\"Stopping\");\n        audioRef.current.sourceNodes[part.name].stop();\n        console.log(\"Stopped playing \", audioRef.current.sourceNodes[part.name]);\n      });\n      //Indicate that playing has stopped\n      setPlaying(false);\n    }\n  }\n\n  const resetTrack = function() {\n    pauseTrack();\n    setTimestamp(0); \n  }\n\n  const seekTrack = function(newTimestamp) {\n    if (playing) {\n      setSeekingWhilePlaying(true);\n    }\n    pauseTrack();\n    setTimestamp(newTimestamp);\n    //Allow useEffect to restart\n  }\n\n  //Execute when seekingWhilePlaying state changes\n  useEffect(() => {\n    if (seekingWhilePlaying) {\n      //Restart the track after seek\n      playTrack();\n      setSeekingWhilePlaying(false);\n    }\n    //eslint-disable-next-line\n   }, [seekingWhilePlaying]);\n\n   const emphasizePart = function(emphasizedPart) {\n    parts.forEach(part => {\n      if (part.name === emphasizedPart) {\n        //Set part to be emphasized at full volume\n        audioRef.current.gainNodes[part.name].gain.value = 1\n      } else {\n        //Set the rest of the parts at a low volume\n        audioRef.current.gainNodes[part.name].gain.value = .15;\n      }\n    })\n  }\n\n  const isolatePart = function(isolatedPart) {\n    parts.forEach(part => {\n      if (part.name === isolatedPart) {\n        //Set part to be isolated at full volume\n        audioRef.current.gainNodes[part.name].gain.value = 1\n      } else {\n        //Mute the rest of the parts\n        audioRef.current.gainNodes[part.name].gain.value = 0;\n      }\n    })\n  }\n\n  const fullChoir = function() {\n    parts.forEach(part => {\n      audioRef.current.gainNodes[part.name].gain.value = 1;\n    })\n  }\n\n  const createUpdaterInterval = function() {\n    return setInterval(() => {\n      const timeElapsedSinceLastUpdate = (\n        ctxRef.current.ctx.currentTime - ctxRef.current.previousTime\n      );\n      //Bring the time property up to date with the currentTime\n      ctxRef.current.previousTime = ctxRef.current.ctx.currentTime;\n      setTimestamp(t => t + timeElapsedSinceLastUpdate);\n    }, 250);\n  }\n\n  const getCapitalizedPartsString = function() {\n    const capitalizedArray = parts.map(part => {\n      const partName = part.name;\n      return partName.charAt(0) + partName.slice(1);\n    })\n    return capitalizedArray.join(\", \")\n  }\n\n  const loadParts = async function() {\n    const partsData = await getParts(props.id);\n    setParts(partsData);\n  }\n\n  //Load parts on ComponentDidMount\n  useEffect(() => {\n    const sourceNodes = audioRef.current.sourceNodes;\n    loadParts();\n\n    //Pause track on ComponentWillUnmount\n    return () => {\n      Object.values(sourceNodes).forEach(node => node.stop())\n    };\n  // eslint-disable-next-line\n  }, [])\n\n  //Execute once the parts data have loaded\n  useEffect(() => {\n    if (parts.length > 0) {\n      parts.forEach(part => {\n        //Load audio for each part\n        audioRef.current.data[part.name] = getData(part)\n        //Create a gain (volume) node for each part\n        audioRef.current.gainNodes[part.name] = ctxRef.current.ctx.createGain();\n      });\n      //Once loaded, select the first part arbitrarily and set the duration\n      Object.values(audioRef.current.data)[0].then(buffer => setDuration(buffer.duration));\n    }\n  // eslint-disable-next-line\n  }, [parts])\n\n  //Execute when playing state changes\n  useEffect(() => {\n    if (playing) {\n      //Before the updater Interval starts, bring the time up to date with the\n      //Audio Context's currentTime\n      ctxRef.current.previousTime = ctxRef.current.ctx.currentTime;\n      updaterRef.current = createUpdaterInterval();\n    } else {\n      clearInterval(updaterRef.current);\n    }\n    return () => clearInterval(updaterRef.current);\n    // eslint-disable-next-line\n  }, [playing])\n\n  //Execute when the timestamp updates\n  useEffect(() => {\n    //If the timestamp exceeds duration of the track,\n    //stop the track and reset the timestamp to 0\n    if (timestamp > duration) {\n      resetTrack();\n    }\n    // eslint-disable-next-line\n  }, [timestamp])\n\n  const loadingMessage = function() {\n    if (loading) {\n      return \"Loading song (this might take a bit)\"\n    } else {\n      return \"\"\n    }\n  }\n\n  const preferences = function() {\n    if (parts.length > 1) {\n      return (\n        <Preferences \n            parts={parts}\n            emphasizePart={emphasizePart}\n            isolatePart={isolatePart}\n            fullChoir={fullChoir} \n          />\n      )\n    }\n  }\n\n  return (\n      <div className=\"Song\">\n        <h2 className=\"song-title\">{props.title}</h2>\n        <span className=\"loading-message\">{loadingMessage()}</span>\n        <LoadingMask loading={loading}>\n          <Controls\n            playTrack={playTrack}\n            resetTrack={resetTrack}\n            pauseTrack={pauseTrack}\n            seekTrack={seekTrack}\n            timestamp={timestamp}\n            duration={duration}\n            playing={playing}\n          />\n          <span className=\"parts\">\n            {`Parts: ${getCapitalizedPartsString()}`}\n          </span>\n          {/* Display preferences only if there is more than one part */}\n          {preferences()}\n        </LoadingMask>\n        \n      </div>\n  )\n}\n\nexport default SongPlayer;","import \"../../style/choir/SongBtn.css\";\n\nfunction SongBtn(props) {\n\n  return (\n    <button className=\"SongBtn\" onClick={() => props.setSelectedSong(props.id)}>\n      {props.title}\n    </button>\n  )\n}\n\nexport default SongBtn;\n","function stripTrailingSlash(url) {\n  if (url.charAt(url.length - 1) !== \"/\") {\n    return url;\n  } else {\n    return stripTrailingSlash(url.slice(0,-1));\n  }\n}\n\nexport default stripTrailingSlash;","import { createContext } from \"react\"\n\nexport default createContext();","import {apiUrl} from \"../apiUrl\";\nimport makeRequest from \"./makeRequest\";\n\nasync function getChoir(choirId, abortSignal) {\n  const apiEndpoint = `${apiUrl}/choirs/${choirId}`;\n  //Timeout after 8 seconds\n  return await makeRequest(apiEndpoint, \"json\", { timeout: 8000, signal: abortSignal });\n}\n\nexport default getChoir;","import { useContext, useEffect, useState } from \"react\"\nimport { Link } from \"react-router-dom\";\nimport SongPlayer from \"./SongPlayer.js\";\nimport SongBtn from \"./SongBtn.js\";\nimport { AudioContext } from 'standardized-audio-context';\nimport stripTrailingSlash from \"../../helpers/stripTrailingSlash.js\";\nimport ChoirIdContext from \"../ChoirIdContext.js\";\nimport getChoir from \"../../network/getChoir.js\";\n\nfunction Home(props) {\n  //Store id of selected song\n  const [choir, setChoir] = useState({})\n  const [selectedSong, setSelectedSong] = useState(null);\n  const [audioContext] = useState(new AudioContext());\n  const [choirId] = useContext(ChoirIdContext)\n\n  const loadChoir = async function(abortController) {\n    try {\n      const choirData = await getChoir(choirId, abortController.signal);\n      setChoir(choirData);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  const songContent = function(song) {\n    if (song.id === selectedSong) {\n      return (\n        <SongPlayer \n        title={song.title}\n        id={song.id}\n        key={song.id}\n        audioContext={audioContext}\n      />\n      )\n    } else {\n      return (\n        <SongBtn \n          title={song.title}\n          id={song.id}\n          setSelectedSong={setSelectedSong}\n          key={song.title + song.id}\n        />\n      )\n    }\n  }\n\n  \n  const songPlayers = function() {\n    if (choir.songs) {\n      return choir.songs.map(song => {\n        return songContent(song);\n      })\n    }\n  }\n\n  const choirName = () => choir.choir_details ? choir.choir_details.name: \"\" ;\n  const choirMessage = () => choir.choir_details ? choir.choir_details.message: \"\" ;\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    loadChoir(abortController);\n    return () => abortController.abort();\n    // eslint-disable-next-line\n  }, [])\n  \n  return (\n    <div className=\"Home\">\n      <Link to={`${stripTrailingSlash(props.match.url)}/edit`}>\n        <button className=\"nav-btn\">Edit</button>\n      </Link>\n      <h1>{choirName()}</h1>\n      <section id=\"overview\">\n        <p >\n          {choirMessage()}\n        </p>\n        <p id=\"disclaimer\">\n          NB: &ensp; This player may not work on a mobile device. &nbsp;\n          Also, you may find that you get the best experience using headphones,\n          especially when selecting \"emphasize\".\n        </p>\n      </section>\n\n      {songPlayers()}\n    </div>\n  );\n}\n\nexport default Home;\n\n\n","import { createContext } from \"react\"\n\nexport default createContext();","import TokenContext from \"./TokenContext\";\nimport { Redirect } from \"react-router-dom\";\nimport { ErrorBoundary } from \"react-error-boundary\";\n\nfunction AdminFilter({token, setToken, targetPath, children}) {\n  \n  const ErrorHandler = function({ error }) {\n    if (error.isUnauthorized) {\n      return <RedirectToLogin />\n    }\n  }\n\n  const RedirectToLogin = function() {\n    return <Redirect to={{\n      pathname: \"../../login\",\n      state: {\n        setToken: setToken,\n        targetPath: targetPath\n      }\n    }} />\n  }\n\n\n\n  // If the admin is authenticated by the presence of a token, \n  // render the admin-restricted child component.\n  // Otherwise, redirect to Login.\n\n  const content = function() {\n    if (token) {\n      return (\n        <TokenContext.Provider value={token}>\n          <ErrorBoundary FallbackComponent={ErrorHandler} >\n            {children}\n          </ErrorBoundary>\n        </TokenContext.Provider>\n      )\n    } else {\n      return <RedirectToLogin />\n    }\n  }\n\n  return content();\n  \n}\n\n\nexport default AdminFilter;\n","import { useState } from \"react\";\nimport \"../../style/edit/RecordingInput.css\"\n\nfunction RecordingInput(props) {\n  const [acceptNewRecording, setAcceptNewRecording] = useState(props.mode === \"new\");\n\n  const overrideRecording = function() {\n    setAcceptNewRecording(true)\n  }\n\n  const revertToOldRecording = function() {\n    setAcceptNewRecording(false)\n  }\n\n  const content = function() {\n    if (props.mode === \"new\") {\n      //If we are creating a new song, display button to upload new recording\n      return (\n        <input \n          type=\"file\" \n          accept=\"audio/*\"\n          name=\"recording\" \n          onChange={props.handleFileUpload}\n          required\n        />\n      )\n      //If we are overriding the old recording, display button to upload new recording,\n      //but also button to revert to back to the old one\n    } else if (acceptNewRecording && props.mode === \"edit\") {\n      return (\n        <div className=\"override-recording\">\n          <input \n            type=\"file\" \n            accept=\"audio/*\"\n            name=\"recording\" \n            onChange={props.handleFileUpload}\n            required\n          />\n          <button className=\"revert-btn\" onClick={revertToOldRecording}>\n            Revert to Existing Recording\n          </button>\n        </div>\n       \n      )\n      //If we are editing the song, display button to override recording\n    } else {\n      return (\n        <button type=\"button\" onClick={overrideRecording}>\n          Override Recording\n        </button>\n      )\n    }\n  }\n  return (\n    <div className=\"RecordingInput\">\n      {content()}\n    </div>\n  )\n}\n\nexport default RecordingInput;\n","import CancelIcon from \"@material-ui/icons/Close\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n  padding: 0;\n  width: 24px;\n  height: 24px;\n  border: none;\n  background-color: rgb(90, 87, 87);\n  border-radius: 5px;\n  color: #fff;\n  cursor: pointer;\n`\nfunction CancelButton({ onClick }) {\n  return (\n    <Button type=\"button\" onClick={onClick}>\n      <CancelIcon />\n    </Button>\n  )\n}\n\nexport default CancelButton;","import RecordingInput from \"./RecordingInput.js\"\nimport CancelButton from \"../general/CancelButton.js\";\nimport \"../../style/edit/PartFormlet.css\"\nimport { Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 5px;\n`\n\nfunction PartFormlet(props) {\n\n  const removePart = function() {\n    props.removePart(props.index)\n  }\n\n  const handleFormChange = function(e)  {\n    props.updatePart(props.index, e.target.name, e.target.value);\n  }\n\n  const handleFileUpload = function(e) {\n    props.updatePart(props.index, e.target.name, e.target.files[0]);\n  }\n\n  const className = function() {\n    return (props.part.mode === \"edit\" ? \"PartFormlet edit-part\" : \"PartFormlet\")\n  }\n\n  return (\n    <Draggable \n      draggableId={props.part.key} \n      index={props.index}\n      disabled={props.noDrag}\n    >\n      {(provided) => {\n        return <li \n          className={className()}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n        >\n          <ButtonWrapper >\n            <CancelButton className=\"remove-part-btn\" onClick={removePart} />\n          </ButtonWrapper>\n          <div className=\"part-formlet-content\">\n            <h4 className=\"part-number\">{`Part ${props.index + 1}`}</h4>\n            <input \n              type=\"text\" \n              name=\"name\" \n              className=\"text-input\"\n              placeholder=\"Name\"\n              value={props.part.name} \n              onChange={handleFormChange}\n              required\n            />\n            <input \n              type=\"text\" \n              name=\"initial\" \n              className=\"text-input initial-input\"\n              placeholder=\"Initial\"\n              value={props.part.initial} \n              onChange={handleFormChange}\n              required\n            />\n            \n            <RecordingInput\n              mode={props.part.mode}\n              handleFileUpload={handleFileUpload}\n            />\n          </div>\n        </li>\n      }}\n    </Draggable>\n    \n  )\n}\n\nexport default PartFormlet","import uniqid from \"uniqid\";\n\nfunction Part(params) {\n\n  const editableProps = [\"initial\", \"name\", \"recording\", \"pitch_order\"]\n\n  const emptyEditableProps = function() {\n    return editableProps.reduce((props, propName) => {\n      props[propName] = \"\";\n      return props;\n    }, {})\n  }\n\n  const data = function() {\n    const formData = new FormData();\n    editableProps.forEach(propName => {\n      formData.append(propName, this[propName]);\n    });\n\n    return formData;\n  }\n  \n  const preparePart = function() {\n    if (params) {\n      return {\n        ...params,\n        recording: \"existing\",\n        mode: \"edit\",\n        key: uniqid()\n      }\n    } else {\n      return {\n        ...emptyEditableProps(),\n        mode: \"new\",\n        key: uniqid()\n      }\n    }\n  }\n\n  const addPitchOrder = function(order) {\n    this.pitch_order = order;\n  }\n  \n  const part = preparePart();\n\n  return {\n    ...part,\n    data,\n    addPitchOrder\n  }\n}\n\nexport default Part;","import { apiUrl } from \"../apiUrl\";\nimport makeRequest from \"./makeRequest\";\n\nasync function destroySong(songId, authToken, abortSignal) {\n    return await makeRequest(`${apiUrl}/songs/${songId}`, \"json\", {\n      method: \"delete\",\n      headers: { Authorization: `Bearer ${authToken}` },\n      timeout: 3000,\n      signal: abortSignal\n    });\n}\n\nexport default destroySong;","import { apiUrl } from \"../apiUrl\";\nimport makeRequest from \"./makeRequest\";\n\nasync function destroyPart(songId, partId, authToken, abortSignal) {\n  console.log(authToken);\n  return await makeRequest(`${apiUrl}/songs/${songId}/parts/${partId}`, \"json\", {\n    method: \"delete\",\n    headers: { Authorization: `Bearer ${authToken}` },\n    timeout: 3000,\n    signal: abortSignal\n  }) \n}\n\nexport default destroyPart;","import makeRequest from \"./makeRequest\";\nimport {apiUrl} from \"../apiUrl\";\n\nfunction SongSender(token) {\n\n  const songController = new AbortController();\n  let song;\n  const parts = [];\n\n\n  function packageRecord(data, id) {\n    const abortController = new AbortController();\n    return {data, id, abortController, sent: false}\n  }\n\n  function addSong(data, id) {\n    if (song) {throw new Error(\"Song already registered\")}\n    song = packageRecord(data, id);\n    return song.abortController;\n  }\n\n  function addPart(data, id) {\n    const partPackage = packageRecord(data, id);\n    parts.push(partPackage);\n    return partPackage.abortController\n  }\n\n  function songUrl() {\n    return (song.id ? `${apiUrl}/songs/${song.id}` : `${apiUrl}/songs`);\n  }\n\n  function partUrl(part) {\n    return (part.id ? `${apiUrl}/songs/${song.id}/parts/${part.id}` : `${apiUrl}/songs/${song.id}/parts`);\n  }\n\n  function method(id) {\n    return (id ? \"patch\" : \"post\");\n  }\n\n  function recordOptions(record, timeout) {\n    return {\n      method: method(record.id),\n      body: record.data,\n      headers: { Authorization: `Bearer ${token}` },\n      signal: songController.signal,\n      timeout: timeout\n    };\n  }\n\n\n\n  async function sendSong() {\n    if (song === undefined) {\n      throw new Error(\"Song not registered\");\n    }\n\n    recordOptions(song, 3000)\n    const songResponse = await makeRequest(songUrl(), \"json\", recordOptions(song, 3000));\n    if (!song.id) {\n      // If this is a new song, then get and store the\n      // newly created song id to use for the parts requests\n      song.id = songResponse.id;\n\n    }\n\n    return songResponse;\n\n\n  }\n\n  async function sendNextPart() {\n    if (!song) {\n      throw new Error(\"No song registered\");\n    } else if (!song.id) {\n      throw new Error(\"Cannot send part: song not yet created\");\n    } else if (parts.length === 0) {\n      throw new Error(\"No parts registered\");\n    } else if (parts.every(part => part.sent)) {\n      throw new Error(\"Cannot send part: all parts already sent\");\n    }\n\n    const unsentParts = parts.filter(part => !part.sent);\n    const nextPart = unsentParts[0];\n    nextPart.sent = true;\n\n    \n    return await makeRequest(partUrl(nextPart), \"json\", recordOptions(nextPart, 15000));\n  }\n\n  return {\n    addSong,\n    addPart,\n    sendSong,\n    sendNextPart,\n    get hasNextPart() {\n      // return true if not all parts marked sent\n      return !parts.every(part => part.sent);\n    }\n  };\n}\n\nexport default SongSender;","function ImmutableList(items, initializer) {\n  const processedGet = () => Object.freeze(items.map(Object.freeze));\n  const get = function() {\n    if(items && items.length > 0) {\n      return processedGet();\n    } else if(initializer) {\n      items = [initializer()];\n      return processedGet();\n    } else {\n      return [];\n    }\n  }\n  const add = function(newItem) {\n    return ImmutableList([...items, newItem]);\n  }\n  const remove = function(index) {\n    if(items.length > 1) {\n      const newItems = [...items];\n      newItems.splice(index, 1);\n      return ImmutableList(newItems);\n    } else {\n      return this;\n    }\n  }\n\n  const change = function(targetIndex, prop, newValue) {\n    const updatedItems = items.map((item, itemIndex) => {\n      if (itemIndex === targetIndex) {\n        const updatedItem = {...item};\n        updatedItem[prop] = newValue;\n        return updatedItem;\n      } else {\n        return item;\n      }\n    });\n    return ImmutableList(updatedItems);\n  }\n\n  const findIndex = function(key, value) {\n    items.findIndex(item => {\n      return item[key] === value\n    })\n  }\n\n\n  const move = function(fromIndex, toIndex) {\n    const movingItem = items[fromIndex];\n    items.splice(fromIndex, 1);\n    items.splice(toIndex, 0, movingItem)\n    return ImmutableList(items)\n  }\n\n  return Object.freeze({\n    get,\n    add,\n    remove,\n    change,\n    findIndex,\n    move\n  });\n}\n\nexport default ImmutableList;","import PartFormlet from \"./PartFormlet.js\"\nimport { useState, useEffect, useContext } from \"react\";\nimport Part from \"../../models/Part\";\nimport \"../../style/edit/SongForm.css\";\nimport destroySong from \"../../network/destroySong.js\";\nimport destroyPart from \"../../network/destroyPart.js\";\nimport SongSender from \"../../network/SongSender.js\";\nimport ImmutableList from \"../../helpers/ImmutableList.js\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport TokenContext from \"../TokenContext.js\";\nimport ChoirIdContext from \"../ChoirIdContext.js\";\n\nfunction SongForm(props) {\n\n  const initializeTitle = function() {\n    //If we are editing the song, initialize with existing title; \n    //otherwise intialize with a blank title\n    return (props.statusInfo.factoryMode === \"edit\" ? props.editableSong.title : \"\")\n  }\n\n  //Move to Song Factory??\n  //If the SongForm is for a new song or for one without any fulfilled parts,\n    //return an ImmutableList with a single blank Part\n  const [parts, setParts] = useState(() => { \n    const partsArray = (props.editableParts ? props.editableParts.map(Part) : []);\n    return ImmutableList(partsArray, Part)\n  });\n\n  const [title, setTitle] = useState(() => initializeTitle());\n  const [abortControllers, setAbortControllers] = useState([]);\n  const token = useContext(TokenContext);\n  const choirId = useContext(ChoirIdContext);\n  \n  //const closeForm = () => props.setStatusInfo(statusInfo => statusInfo.reset());\n\n  const handleChange = e => setTitle(e.target.value);\n\n  const addPart = () => setParts(parts => parts.add(Part()));\n\n  const removePart = index => setParts(parts => parts.remove(index));\n\n  const updatePart = function(partIndex, prop, newValue) {\n     setParts(parts => parts.change(partIndex, prop, newValue));\n  }\n\n  \n  // Move this to SongFactory ????\n  const assembleLoadingsObject = function(loadingParts) {\n    props.setLoadings(loadings => {\n      loadings = {}\n      loadingParts.forEach(part => {\n        loadings[part.name] = {success: false, mode: part.mode}\n      });\n      return {...loadings}\n    });\n  }\n\n  const indicateSuccess = function(partName) {\n    props.setLoadings(loadings => {\n      loadings[partName].success = true;\n      return {...loadings};\n    });\n  }\n\n  const getObsoleteParts = function() {\n    const oldParts = Object.values(props.editableParts);\n    //Filter out the new parts (which don't have an id)\n    //and get the ids of the remaining parts (which are being updated)\n    const updatingPartIds = parts.get().filter(part => part.id).map(part => part.id);\n    return oldParts.filter(part => !updatingPartIds.includes(part.id));\n  }\n\n  const deleteObsoleteParts = function() {\n    const obsoleteParts = getObsoleteParts();\n    props.setLoadings(loadings => {\n      //Add a loading object for each part to loadings\n      obsoleteParts.forEach(part => {\n        loadings[part.name] = {success: false, mode: \"destroy\"}\n      })\n      return {...loadings}\n    })\n    obsoleteParts.forEach(part => {\n      destroyExistingPart(props.editableSong.id, part)\n    });\n  }\n\n  const destroyExistingSong = async function() {\n    \n    props.setStatusInfo(statusInfo => statusInfo.setDestroy());\n\n    try {\n      const newController = new AbortController();\n      setAbortControllers(abortControllers => [...abortControllers, newController])\n      await destroySong(\n        props.editableSong.id, \n        token,\n        newController.signal\n      );\n\n      props.setStatusInfo(statusInfo => statusInfo.setSuccess());\n\n    } catch(err) {\n      console.log(err);\n      props.setStatusInfo(statusInfo => statusInfo.setFailure());\n    }\n  }\n  \n  const destroyExistingPart = async function(songId, part) {\n    try {\n      const newController = new AbortController();\n      setAbortControllers(abortControllers => [...abortControllers, newController])\n      await destroyPart(songId, part.id, token);\n      //If the part destroys succesfully, update loadings object\n      indicateSuccess(part);\n    } catch(err) {console.log(err)}\n  }\n\n  const preparePartData = function(part) {\n    part.pitch_order = parts.findIndex(\"id\", part.id);\n    return part.data();\n  }\n\n  const prepareSongData = function() {\n    const songData = new FormData();\n    songData.append(\"title\", title);\n    songData.append(\"choir_id\", choirId)\n    return songData;\n  }\n\n  const createOrUpdateSong = function(sender) {\n    //POST or PATCH the Song\n    const songData = prepareSongData();\n    const songId = (props.editableParts ? props.editableParts.id : null)\n    const songController = sender.addSong(songData, songId);\n    setAbortControllers(abortControllers => [...abortControllers, songController]);\n    return sender.sendSong();\n  }\n\n  const createOrUpdateParts = function(sender) {\n    const newControllers = [];\n    // For each part, prepare the data and send the part,\n    // storing the abortController in state, and returning an\n    // array of the requests\n    const partRequests = \n      parts.get()\n          //unfreeze the object\n            .map(part => Object.assign({}, part))\n            .reduce((requestArray, part) => {\n      const partData = preparePartData(part)\n      newControllers.push(sender.addPart(partData, part.id));\n      \n      requestArray.push(sender.sendNextPart());\n      return requestArray;\n    }, []);\n\n    setAbortControllers(newControllers);\n    return partRequests\n  }\n\n  const submitSong = async function() {\n    ///Add a loading object for each part to loadings\n    assembleLoadingsObject(parts.get());\n    //If this is a PATCH and there any parts being removed, delete them\n    if (props.editableParts) {\n      deleteObsoleteParts();\n    }\n\n    const sender = SongSender(token);\n\n    //Send the song\n    try {\n      await createOrUpdateSong(sender)\n    } catch (err) {\n      props.setStatusInfo(statusInfo => statusInfo.setFailure());\n      console.log(err);\n    }\n  \n    //After sending the Song, send each of the Song's Parts\n    try {\n      var partRequests = createOrUpdateParts(sender)\n    } catch (err) {\n      props.setStatusInfo(statusInfo => statusInfo.setFailure());\n      console.log(err);\n    }\n\n    partRequests.forEach(async partRequest => {\n      indicateSuccess((await partRequest).name);\n    });\n  }\n\n  const submitValue = function() {\n    return (props.statusInfo.factoryMode === \"new\" ? \"Submit Song\" : \"Update Song\")\n  }\n\n  const deleteBtn = function() {\n    //If we are editing an existing song, display button to delete Song\n    if (props.statusInfo.factoryMode === \"edit\") {\n      return (\n        <button type=\"button\" className=\"pseudo-btn\" onClick={handleDestroySong}>Delete Song</button>\n      )\n    }\n  }\n\n  const handleDestroySong = function() {\n    if(window.confirm(\"Do you really want to delete this song?\")) {\n      destroyExistingSong();\n    }\n  }\n\n  const handleSubmit = function(e) {\n    e.preventDefault();\n    //set jobStatus to the appropriate delivery status\n    props.setStatusInfo(statusInfo => statusInfo.setDelivery());\n    submitSong();\n  }\n\n  const onDragEnd = function({destination, source}) {\n    if(!destination || destination.index === source.index) {\n      return;\n    }\n\n    setParts(parts => parts.move(source.index, destination.index))\n\n  }\n\n  useEffect(() => {\n    return () => abortControllers.forEach(controlller => controlller.abort());\n  })\n\n  return (\n    <form className=\"SongForm\" onSubmit={handleSubmit}>\n      <div className=\"title-bar\">\n        <input \n          type=\"text\" \n          name=\"title\" \n          className=\"text-input song-title-input\"\n          placeholder=\"Song Title\"\n          value={title} \n          onChange={handleChange}\n          required\n        />\n      </div>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"partsList\">\n          {(provided) => {\n            return (\n              <ul \n                id=\"parts-list\"\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n              >\n                {parts.get().map((part, index) => {\n                  return <PartFormlet\n                      index={index} \n                      key={part.key} \n                      part={part}\n                      updatePart={updatePart}\n                      removePart={removePart}\n                      noDrag={parts.get().length === 0}\n                    />\n                })}\n                {provided.placeholder}\n              </ul>\n            )\n          }}\n        </Droppable>\n      </DragDropContext>\n      \n      <div className=\"main-form-btns\">\n        <button \n          type=\"button\" \n          className=\"pseudo-btn\" \n          id=\"add-part-btn\" \n          onClick={addPart}\n        >\n          Add Part\n        </button>\n        {deleteBtn()}\n        <input type=\"submit\" className=\"pseudo-btn\" value={submitValue()}/>\n      </div>\n      \n    </form>\n  )\n}\n\nexport default SongForm;","import \"../../style/edit/PartLoadingEntry.css\";\n\nfunction PartLoadedEntry(props) {\n\n  const loadedEntryVerbs = function() {\n    // Return status verbs based on whether mode is new, edit, or destroy\n    if (props.loading.mode === \"new\") {\n      return {working: \"Loading\", finished: \"Loaded\"}\n    } else if (props.loading.mode === \"edit\") {\n      return {working: \"Updating\", finished: \"Updated\"}\n    } else if (props.loading.mode === \"destroy\") {\n      return {working: \"Destroying\", finished: \"Destroyed\"}\n    }\n  }\n  const content = function() {\n    if (props.loading.success) {\n      return `${props.partName}: ${loadedEntryVerbs().finished}`;\n    } else {\n      return `${props.partName}: ${loadedEntryVerbs().working}`;\n    }\n  }\n\n  //Apply \"working\" or \"finished\" className depending whether loading complete\n  const className = () => (props.loading.success ? \"finished\" : \"working\");\n\n  return (\n    <div className=\"PartLoadedEntry\" >\n      <span className={className()}>{content()}</span>\n    </div>\n  )\n}\n\nexport default PartLoadedEntry;","import PartLoadingEntry from \"./PartLoadingEntry.js\";\nimport \"../../style/edit/SubmitProgress.css\"\n\nfunction SubmitProgress(props) {\n \n  const topMessage = function() {\n    switch (props.statusInfo.jobStatus) {\n      case \"creating\":\n       return \"Creating song...\";\n      case \"updating\":\n        return \"Updating song...\"\n      case \"destroying\":\n        return \"Destroying song...\";\n      default:\n        return \"\";\n    }\n  }\n\n  const progressStatus = function() {\n    if (props.factoryMode === \"delivery\") {\n      return Object.entries(props.loadings).map(partLoadingEntry => {\n        return (\n          <PartLoadingEntry\n            partName={partLoadingEntry[0]}\n            loading={partLoadingEntry[1]}\n            key={`${partLoadingEntry[0]}-key`}\n          />\n        )\n      })\n    } else {\n      return \"\"\n    }\n  }\n\n  const responseMessage = function() {\n    switch (props.statusInfo.jobStatus) {\n      case \"submitted\":\n        return \"Song successfully created!\";\n      case \"updated\":\n        return \"Song succesfully updated!\";\n      case \"destroyed\":\n        return \"Song successfully destroyed!\";\n      case \"failedToCreate\":\n        return \"Rats! Song creation could not be completed\";\n      case \"failedToUpdate\":\n      return \"Rats! Song could not be succesfully updated\"\n      case \"failedToDestroy\":\n        return \"Rats! Song could not be succesfully destroyed\";\n      default:\n        return \"\";\n    }\n  }\n    \n  return (\n    <div className=\"SubmitProgress\">\n      <span className=\"top-message\">{topMessage()}</span>\n      <div className=\"progress-status\">\n        {progressStatus()}\n        <span className=\"report-message\">{responseMessage()}</span>\n      </div>\n    </div>\n  )\n}\n\nexport default SubmitProgress;","import { useState } from \"react\";\n\n\nfunction useShallowMutation(initialObj) {\n  const [value, setValue] = useState(initialObj);\n\n  const wrappedSetValue = function(callback) {\n    setValue(obj => {\n      const copiedObj = {...obj};\n      callback(copiedObj);\n      return copiedObj;\n    });\n  }\n\n  return [value, wrappedSetValue];\n}\n\nexport default useShallowMutation;","function StatusInfo() {\n  let jobStatus = \"none\";\n  let factoryMode = \"idle\";\n\n  const isValidJobStatus = function(status) {\n    return (\n      status === \"none\" ||\n      status === \"assembly\" ||\n      status === \"creating\" ||\n      status === \"created\" ||\n      status === \"failedToCreate\" ||\n      status === \"updating\" ||\n      status === \"updated\" ||\n      status === \"failedToUpdate\" ||\n      status === \"destroying\" ||\n      status === \"destroyed\" ||\n      status === \"failedToDestroy\"\n    );\n  }\n\n  const checkJobStatusValidity = function(status) {\n    if (!isValidJobStatus(status)) {\n      throw new Error(`${status} is not a valid jobStatus`);\n    }\n  }\n\n  const isValidFactoryMode = function(mode) {\n    return (\n      mode === \"new\" ||\n      mode === \"idle\" ||\n      mode === \"edit\" ||\n      mode === \"delivery\" ||\n      mode === \"destruction\"\n    );\n  }\n\n  const checkFactoryModeValidity = function(mode) {\n    if (!isValidFactoryMode(mode)) {\n      throw new Error(`${mode} is not a valid factoryMode`);\n    }\n  }\n\n  const setFailure = function() {\n    switch(this.jobStatus) {\n      case \"creating\":\n        this.jobStatus = \"failedToCreate\";\n        break;\n      case \"updating\":\n        this.jobStatus = \"failedToUpdate\";\n        break;\n      case \"destroying\":\n        this.jobStatus = \"failedToDestroy\";\n        break;\n      default:\n        throw new Error(`Cannot setFailure when job is not in progress (jobStatus: ${this.jobStatus})`)\n    }\n\n    this.factoryMode = \"idle\";\n  }\n\n  const setSuccess = function() {\n    switch(this.jobStatus) {\n      case \"creating\":\n        this.jobStatus = \"created\";\n        break;\n      case \"updating\":\n        this.jobStatus = \"updated\";\n        break;\n      case \"destroying\":\n        this.jobStatus = \"destroyed\";\n        break;\n      default:\n        throw new Error(`Cannot setSuccess when job is not in progress (jobStatus: ${this.jobStatus})`)\n    }\n\n    this.factoryMode = \"idle\";\n  }\n\n  const setDelivery = function() {\n    switch(this.factoryMode) {\n      case \"new\":\n        this.jobStatus = \"creating\";\n        break;\n      case \"edit\":\n        this.jobStatus = \"updating\";\n        break;\n      default:\n        throw new Error(`Cannot setDelivery when factoryMode is ${this.factoryMode}`)\n    }\n    this.factoryMode = \"delivery\";\n  }\n\n  const setDestroy = function() {\n    this.jobStatus = \"destroying\";\n    this.factoryMode = \"destruction\";\n  }\n\n  const isInProgress = function() {\n    return (\n      this.jobStatus === \"assembly\" ||\n      this.jobStatus === \"creating\" ||\n      this.jobStatus === \"updating\" ||\n      this.jobStatus === \"destroying\"\n    )\n  }\n\n  const reset = function() {\n    this.factoryMode = \"idle\";\n    this.jobStatus = \"none\";\n  }\n\n  const isSuccessful = function() {\n    return (\n      this.jobStatus === \"created\" ||\n      this.jobStatus === \"updated\" ||\n      this.jobStatus === \"destroyed\"\n    )\n  }\n\n  return {\n    get jobStatus() {\n      return jobStatus;\n    },\n    set jobStatus(newValue) {\n      checkJobStatusValidity(newValue);\n      jobStatus = newValue;\n    },\n    get factoryMode() {\n      return factoryMode;\n    },\n    set factoryMode(newValue) {\n      checkFactoryModeValidity(newValue);\n      factoryMode = newValue;\n    },\n    isSuccessful,\n    setFailure,\n    setSuccess,\n    setDelivery,\n    setDestroy,\n    isInProgress,\n    reset\n  }\n}\n\nexport default StatusInfo;","import SongForm from \"./SongForm.js\";\nimport SubmitProgress from \"./SubmitProgress.js\"\nimport { useState, useEffect } from \"react\";\nimport \"../../style/edit/SongFactory.css\";\nimport useShallowMutation from \"../../helpers/useShallowMutation\";\nimport StatusInfo from \"../../helpers/StatusInfo\";\nimport getParts from \"../../network/getParts\";\n\n\nfunction SongFactory({ song, loadSongs, closeEditor }) {\n\n\n  //loadings is an object of loading objects\n  //Each loading object has 2 keys, success (Boolean) \n  //, and mode (String: \"create\", \"update\", or \"destroy\")\n  const [loadings, setLoadings] = useState({})\n  const [statusInfo, setStatusInfo] = useShallowMutation(StatusInfo());\n  const [editableParts, setEditableParts] = useState([]);\n  \n\n\n  const loadParts = async function(abortController) {\n    setEditableParts(await getParts(song.id, abortController.signal))\n    setStatusInfo(statusInfo => {\n        statusInfo.factoryMode = (song.id === \"new\" ? \"new\" : \"edit\");\n        statusInfo.jobStatus = \"assembly\";\n    });\n  }\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    if(song.id) {\n      loadParts(abortController)\n    }\n\n    return () => abortController.abort();\n    //eslint-disable-next-line\n  }, [])\n\n  //If factory results have changed the song list(s), reload songs\n  useEffect(() => {\n    const abortController = new AbortController();\n    if (statusInfo.isSuccessful()) {\n      loadSongs(abortController);\n    }\n\n    return () => abortController.abort();\n    //eslint-disable-next-line\n  }, [statusInfo])\n\n \n  const content = function() {\n    switch (statusInfo.factoryMode) {\n      //If we are creating or updating a song, render the SongForm\n      case \"new\":\n      case \"edit\":\n        return (\n          <SongForm\n            statusInfo={statusInfo}\n            setStatusInfo={setStatusInfo}\n            setLoadings={setLoadings}\n            editableSong={song}\n            editableParts={editableParts}\n          />\n        );\n      //If we are submitting the SongForm, or if we are destroying a song,\n      //render SubmitProgress\n      case \"delivery\":\n      case \"destruction\":\n        return (\n          <SubmitProgress \n            loadings={loadings}\n            statusInfo={statusInfo}\n          />\n        );\n      default:\n        return;\n    }\n  }\n\n  \n\n  useEffect(() => {\n    //If all parts are loading, mark job as finished\n    if (Object.values(loadings).every(loading => loading.success) &&\n        Object.values(loadings).length > 0) {\n        setStatusInfo(statusInfo => statusInfo.setSuccess())\n    }\n    //eslint-disable-next-line\n  }, [loadings]);\n\n  return (\n    <div className=\"SongFactory\">\n        {content()}\n    </div>\n  )\n}\n\nexport default SongFactory;","function TitleBar({title}) {\n  return (\n    <span className=\"TitleBar\">\n      {title}\n    </span>\n  )\n}\n\nexport default TitleBar;\n","import styled from \"styled-components\";\nimport SongFactory from \"./SongFactory\";\nimport TitleBar from \"./TitleBar\";\nimport CancelButton from \"../general/CancelButton\";\n\nconst ListElement = styled.li`\n    list-style: none;\n    border: 1px solid lightgray;\n    padding: 5px;\n    margin-bottom: 5px;\n    border-radius: 3px;\n    background-color: white;\n    cursor: pointer;\n  `;\n\nconst ButtonWrapper = styled.div`\n  float: right;\n`\n\n\nfunction SongEditor({ \n  song, \n  isOpen,\n  openCloseSwitch,\n  loadSongs\n}) {\n\n  \n  const handleClick = function(e) {\n    // Filter out child elements from click event\n    if (e.target.classList.contains(\"SongEditor\")) {\n      openCloseSwitch(song.id)\n    }\n  }\n\n  const content = function() {\n    if (isOpen(song.id)) {\n      return <SongFactory song={song} loadSongs={loadSongs} />\n    } else {\n      return <TitleBar title={song.title} />\n    }\n  }\n\n  const closeButton = function() {\n    if (isOpen(song.id)) {\n      return (\n        <ButtonWrapper onClick={() => openCloseSwitch(song.id)}>\n          <CancelButton />\n        </ButtonWrapper>\n      );\n    }\n  }\n  \n\n  return (\n    <ListElement className=\"SongEditor\" onClick={handleClick}>\n          {closeButton()}\n          {content()}\n    </ListElement>\n  )\n}\n\nexport default SongEditor;\n","import {apiUrl} from \"../apiUrl\";\nimport makeRequest from \"./makeRequest\"\n\n\nasync function getEditableSongs(choirId, token, abortSignal) {\n  //fetch songs from Rails API\n    const choirEdit = await makeRequest(`${apiUrl}/choirs/${choirId}/edit`, \"json\", {\n      headers: { Authorization: `Bearer ${token}` },\n      signal: abortSignal\n    });\n\n    return choirEdit.songs\n}\n\nexport default getEditableSongs;\n\n","import { useState, useEffect, useContext } from \"react\";\nimport TokenContext from \"../TokenContext\";\nimport { Link } from \"react-router-dom\";\nimport SongEditor from \"./SongEditor\";\nimport getEditableSongs from \"../../network/getEditableSongs.js\";\nimport styled from \"styled-components\";\nimport removeFromObjectArray from \"../../helpers/removeFromObjectArray\";\nimport { useErrorHandler } from \"react-error-boundary\";\n\nconst List = styled.ul`\nwidth: 400px;\npadding: 50px;\nbackground-color: rgb(241, 236, 236);\n`;\nconst AddButton = styled.li`\n  list-style: none;\n  border: 1px solid lightgray;\n  padding: 5px;\n  margin-bottom: 5px;\n  border-radius: 3px;\n  background-color: white;\n  width: 15px;\n  float: right;\n  cursor: pointer;\n  `;\n\n\nfunction EditSongs({ choirId}) {\n  \n  const [songs, setSongs] = useState([]);\n  const [selectedSongId, setSelectedSongId] = useState(null);\n  const handleError = useErrorHandler();\n  const token = useContext(TokenContext);\n\n  const loadSongs = async function(abortController) {\n    let songs;\n    try {\n      songs = await getEditableSongs(choirId, token, abortController.signal);\n      setSongs(songs);\n      setSelectedSongId(null);\n    } catch (e) {\n      handleError(e);\n    }\n\n    \n    \n  }\n\n  const handleAdd = function() {\n    const newSong = {id: \"new\"}\n    setSelectedSongId(\"new\");\n    setSongs(songs => [...songs, newSong]);\n  }\n\n  const closeEditor = () => setSelectedSongId(null);\n  const openEditor = id => setSelectedSongId(id);\n  const isOpen = (songId) => selectedSongId === songId;\n\n  const openCloseSwitch = function(songId) {\n    // If open editor is a new draft, remove from the songs list\n    if (selectedSongId === \"new\") {\n      setSongs(songs => removeFromObjectArray(songs, songId, \"new\"))\n    }\n\n    isOpen(songId) ? closeEditor() : openEditor(songId);\n  }\n\n\n\n  //Execute when component mounts\n  useEffect(() => {\n    const abortController = new AbortController();\n    loadSongs(abortController);\n    return () => abortController.abort();\n    // eslint-disable-next-line\n  }, []);\n\n  //Remove unsubmitted songs when they are closed\n\n    return (\n      <div className=\"EditSongs\">\n        <Link to=\".\">\n          <button className=\"nav-btn\">Home</button>\n        </Link>\n        <List>\n          {songs.map(song => {\n            return (\n            <SongEditor \n              song={song}  \n              key={song.id}\n              isOpen={isOpen}\n              openCloseSwitch={openCloseSwitch}\n              loadSongs={loadSongs}\n            />\n            )\n          })}\n          <AddButton onClick={handleAdd}>+</AddButton>\n        </List>\n      </div>\n    )\n}\n\nexport default EditSongs;","export default function removeFromObjectArray(array, key, value) {\n  const copy = [...array];\n  const index = array.findIndex(obj => obj[key] === value);\n  copy.splice(index, 1);\n  return copy;\n}","import \"../style/Home.css\";\nimport { Route, Switch, useParams } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Home from \"./choir/Home\";\nimport AdminFilter from \"./AdminFilter.js\";\nimport EditSongs from \"./edit/EditSongs\";\nimport ChoirIdContext from \"./ChoirIdContext\";\n\n\nfunction ChoirPage() {\n\n  const findLocalToken = function() {\n    try {\n      //Try to return token from localStorage\n      return localStorage.getItem(\"token\");\n    } catch (err) {\n      console.log(\"Couldn't find token\");\n      //If not permitted (becuase of Chrome Incognito 3rd-party, etc.), return null\n      return null;\n    }\n  }\n\n  const [token, setToken] = useState(findLocalToken());\n  const { choirId } = useParams(); \n  \n \n\n\n  return (\n    <div className=\"Choir\">\n      <ChoirIdContext.Provider value={choirId}>\n        <Switch>\n          <Route exact path=\"/choir/:choirId\" component={Home} />\n          <Route path=\"/choir/:choirId/edit\" render={(props) => \n              <AdminFilter {...props} token={token} setToken={setToken} targetPath={`./choir/${choirId}/edit`}>\n                <EditSongs choirId={choirId} />\n              </AdminFilter>\n            }/>\n        </Switch>\n      </ChoirIdContext.Provider>\n        \n    </div>\n    \n  )\n}\n\nexport default ChoirPage;","import { apiUrl } from \"../apiUrl\";\nimport makeRequest from \"./makeRequest\";\n\nasync function attemptLogin(username, password, abortSignal) {\n   //Create, fill, and post Login FormData\n   const params = new FormData();\n   params.append(\"password\", password)\n   params.append(\"username\", username)\n\n   //Timeout after 4 seconds\n   return await makeRequest(`${apiUrl}/admins/login`, \"json\", {\n     method: \"post\",\n     body: params,\n     timeout: 4000,\n     abortSignal: abortSignal\n   });\n}\n\nexport default attemptLogin;","import { useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport attemptLogin from \"../network/attemptLogin.js\";\nimport \"../style/Login.css\";\n\nfunction Login(props) {\n  \n  //Even if token is present, set isAuthed to false\n  const [isAuthed, setIsAuthed] = useState(false)\n  const [incorrectCredentials, setIncorrectCredentials] = useState(false);\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\"\n  })\n  \n  const handleChange = function(e) {\n    setFormData({...formData, [e.target.name]: e.target.value})\n  }\n\n  const setLocalToken = function(tokenString) {\n    //Set local token to remember login\n    //If localStorage is unavailable, swallow error\n    try {\n      localStorage.setItem(\"token\", tokenString);\n    } catch {}\n  }\n\n  const handleSubmit = function(e) {\n    e.preventDefault();\n    attemptLogin(formData.username, formData.password)\n    .then(decodedResponse => {\n      //If login successful, set the token in the App component\n      // and in localStorage, and indicate that the admin is authed\n      setLocalToken(decodedResponse.token)\n      props.location.state.setToken(decodedResponse.token);\n      setIsAuthed(true);\n    })\n    .catch(err => {\n      console.log(props.location)\n      //If the response is 401 Unauthorized, indicate incorrectCredentials\n      err.isUnauthorized ? setIncorrectCredentials(true) : console.log(err)\n    })\n  }\n\n  const incorrectCredentialsMessage = function() {\n    return (incorrectCredentials ? \"Either the username or the password is incorrect\" : \"\")\n  }\n\n  if (isAuthed) {\n    return <Redirect to={props.location.state.targetPath} />\n  } else {\n    return (\n      <div className=\"Login central-container\">\n        \n          <span id=\"incorrect-credentials-message\">\n            {incorrectCredentialsMessage()}\n          </span>\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"username\">Username</label>\n            <input \n              type=\"text\" \n              id=\"username\" \n              name=\"username\" \n              className=\"text-input\"\n              value={formData.username}\n              onChange={handleChange}\n              required\n            />\n            <label htmlFor=\"password\">Password</label>\n            <input \n              type=\"password\" \n              id=\"password\" \n              name=\"password\"\n              className=\"text-input\" \n              value={formData.password}\n              onChange={handleChange}\n              required\n            />\n            <input type=\"submit\" className=\"pseudo-btn\" value=\"Log in\"/>\n          </form>\n      </div>\n    )\n  }\n}\n\nexport default Login","import { HashRouter, Route } from \"react-router-dom\";\nimport { Switch } from \"react-router-dom\";\nimport ChoirPage from \"./components/ChoirPage.js\";\nimport Login from \"./components/Login\";\n\n\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/login\" render={(props) => <Login {...props} />} />\n        <Route path={\"/choir/:choirId\"} component={ChoirPage}/>\n      </Switch>\n    </HashRouter>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\"\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}